// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'dls_notification.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

DLSNotification _$DLSNotificationFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'taskChangeAnyString':
      return _DLSNotificationTaskAnyString.fromJson(json);
    case 'taskAddYouAssigner':
      return _DLSNotificationTaskAddYouAssigner.fromJson(json);
    case 'taskAddYouWatcher':
      return _DLSNotificationTaskAddYouWatcher.fromJson(json);
    case 'taskAddYouResponsible':
      return _DLSNotificationTaskAddYouResponsible.fromJson(json);
    case 'taskAddAssigners':
      return _DLSNotificationTaskAddAssigners.fromJson(json);
    case 'taskAddResponsible':
      return _DLSNotificationTaskAddResponsible.fromJson(json);
    case 'taskChangeStatus':
      return _DLSNotificationTaskChangeStatus.fromJson(json);
    case 'taskChangeDeadline':
      return _DLSNotificationTaskChangeDeadline.fromJson(json);
    case 'taskChangePriority':
      return _DLSNotificationTaskChangePriority.fromJson(json);
    case 'taskAddFiles':
      return _DLSNotificationTaskAddFiles.fromJson(json);
    case 'taskRemoveFiles':
      return _DLSNotificationTaskRemoveFiles.fromJson(json);
    case 'taskAddWatchers':
      return _DLSNotificationTaskAddWatchers.fromJson(json);
    case 'taskRemoveWatchers':
      return _DLSNotificationTaskRemoveWatchers.fromJson(json);
    case 'taskAddDependencies':
      return _DLSNotificationTaskAddDependencies.fromJson(json);
    case 'taskRemoveDependencies':
      return _DLSNotificationTaskRemoveDependencies.fromJson(json);
    case 'taskAddSprints':
      return _DLSNotificationTaskAddSprints.fromJson(json);
    case 'taskRemoveSprints':
      return _DLSNotificationTaskRemoveSprints.fromJson(json);
    case 'taskAddEvents':
      return _DLSNotificationTaskAddEvents.fromJson(json);
    case 'taskRemoveEvents':
      return _DLSNotificationTaskRemoveEvents.fromJson(json);
    case 'taskAddTodos':
      return _DLSNotificationTaskAddTodos.fromJson(json);
    case 'taskRemoveTodos':
      return _DLSNotificationTaskRemoveTodos.fromJson(json);
    case 'taskAddChildTasks':
      return _DLSNotificationTaskChildTasks.fromJson(json);
    case 'taskRemoveChildTasks':
      return _DLSNotificationTaskRemoveTasks.fromJson(json);
    case 'taskRestrictAccess':
      return _DLSNotificationTaskRestrictAccess.fromJson(json);
    case 'taskExpandAccess':
      return _DLSNotificationTaskExpandAccess.fromJson(json);
    case 'taskLock':
      return _DLSNotificationTaskLock.fromJson(json);
    case 'taskUnlock':
      return _DLSNotificationTaskUnlock.fromJson(json);
    case 'taskCallStart':
      return _DLSNotificationTaskCallStart.fromJson(json);
    case 'taskCallEnd':
      return _DLSNotificationTaskCallEnd.fromJson(json);
    case 'taskReminder':
      return _DLSNotificationTaskReminder.fromJson(json);
    case 'taskOverdue':
      return _DLSNotificationTaskOverdue.fromJson(json);
    case 'taskInformation':
      return _DLSNotificationTaskInformation.fromJson(json);
    case 'eventChangeAnyString':
      return _DLSNotificationEventAnyString.fromJson(json);
    case 'eventInvite':
      return _DLSNotificationEventInvite.fromJson(json);
    case 'eventRemove':
      return _DLSNotificationEventRemove.fromJson(json);
    case 'eventChangeDate':
      return _DLSNotificationEventChangeDate.fromJson(json);
    case 'eventChangeTime':
      return _DLSNotificationEventChangeTime.fromJson(json);
    case 'eventChangeFormat':
      return _DLSNotificationEventChangeFormat.fromJson(json);
    case 'eventChangePlace':
      return _DLSNotificationEventChangePlace.fromJson(json);
    case 'eventAddFiles':
      return _DLSNotificationEventAddFiles.fromJson(json);
    case 'eventRemoveFiles':
      return _DLSNotificationEventRemoveFiles.fromJson(json);
    case 'eventRestrictAccess':
      return _DLSNotificationEventRestrictAccess.fromJson(json);
    case 'eventExpandAccess':
      return _DLSNotificationEventExpandAccess.fromJson(json);
    case 'eventStart':
      return _DLSNotificationEventStart.fromJson(json);
    case 'eventEnd':
      return _DLSNotificationEventEnd.fromJson(json);
    case 'eventCallStart':
      return _DLSNotificationEventCallStart.fromJson(json);
    case 'eventCallEnd':
      return _DLSNotificationEventCallEnd.fromJson(json);
    case 'eventInformation':
      return _DLSNotificationEventInformation.fromJson(json);
    case 'chatPrivateMessage':
      return _DLSNotificationChatPrivateMessage.fromJson(json);
    case 'chatGroupMessage':
      return _DLSNotificationChatGroupMessage.fromJson(json);
    case 'chatCallStart':
      return _DLSNotificationChatCallStart.fromJson(json);
    case 'chatCallEnd':
      return _DLSNotificationChatCallEnd.fromJson(json);
    case 'chatReplyMessage':
      return _DLSNotificationChatReplyMessage.fromJson(json);
    case 'chatAddYouToGroup':
      return _DLSNotificationChatAddYouToGroup.fromJson(json);
    case 'chatAddGroupUsers':
      return _DLSNotificationChatAddGroupUsers.fromJson(json);
    case 'chatRemoveGroupUsers':
      return _DLSNotificationChatRemoveGroupUsers.fromJson(json);
    case 'chatAddEventComment':
      return _DLSNotificationChatAddEventComment.fromJson(json);
    case 'chatRemoveEventComment':
      return _DLSNotificationChatRemoveEventComment.fromJson(json);
    case 'chatAddTaskComment':
      return _DLSNotificationChatAddTaskComments.fromJson(json);
    case 'chatRemoveTaskComment':
      return _DLSNotificationChatRemoveTaskComments.fromJson(json);
    case 'chatChangeGroupName':
      return _DLSNotificationChatChangeGroupName.fromJson(json);
    case 'chatChangeGroupAvatar':
      return _DLSNotificationChatChangeGroupAvatar.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'DLSNotification',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
mixin _$DLSNotification {
  DLSNotificationObject get nObject => throw _privateConstructorUsedError;
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $DLSNotificationCopyWith<DLSNotification> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $DLSNotificationCopyWith<$Res> {
  factory $DLSNotificationCopyWith(
          DLSNotification value, $Res Function(DLSNotification) then) =
      _$DLSNotificationCopyWithImpl<$Res, DLSNotification>;
  @useResult
  $Res call(
      {@JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});
}

/// @nodoc
class _$DLSNotificationCopyWithImpl<$Res, $Val extends DLSNotification>
    implements $DLSNotificationCopyWith<$Res> {
  _$DLSNotificationCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? platform = freezed,
  }) {
    return _then(_value.copyWith(
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ) as $Val);
  }
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAnyStringCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAnyStringCopyWith(
          _$_DLSNotificationTaskAnyString value,
          $Res Function(_$_DLSNotificationTaskAnyString) then) =
      __$$_DLSNotificationTaskAnyStringCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      String text1,
      String text2,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAnyStringCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskAnyString>
    implements _$$_DLSNotificationTaskAnyStringCopyWith<$Res> {
  __$$_DLSNotificationTaskAnyStringCopyWithImpl(
      _$_DLSNotificationTaskAnyString _value,
      $Res Function(_$_DLSNotificationTaskAnyString) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? text1 = null,
    Object? text2 = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAnyString(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      text1: null == text1
          ? _value.text1
          : text1 // ignore: cast_nullable_to_non_nullable
              as String,
      text2: null == text2
          ? _value.text2
          : text2 // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAnyString extends _DLSNotificationTaskAnyString {
  const _$_DLSNotificationTaskAnyString(
      {required this.nObject,
      required this.user,
      required this.text1,
      required this.text2,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskChangeAnyString',
        super._();

  factory _$_DLSNotificationTaskAnyString.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAnyStringFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;

  /// текст без выделения
  /// например: добавили 12 файлов к мероприятию
  @override
  final String text1;

  /// текст с выделением
  /// например: Планирование планов
  @override
  final String text2;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskChangeAnyString(nObject: $nObject, user: $user, text1: $text1, text2: $text2, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAnyString &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.text1, text1) || other.text1 == text1) &&
            (identical(other.text2, text2) || other.text2 == text2) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, text1, text2, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAnyStringCopyWith<_$_DLSNotificationTaskAnyString>
      get copyWith => __$$_DLSNotificationTaskAnyStringCopyWithImpl<
          _$_DLSNotificationTaskAnyString>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskChangeAnyString(nObject, user, text1, text2, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskChangeAnyString?.call(nObject, user, text1, text2, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskChangeAnyString != null) {
      return taskChangeAnyString(nObject, user, text1, text2, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskChangeAnyString(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskChangeAnyString?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskChangeAnyString != null) {
      return taskChangeAnyString(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAnyStringToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAnyString extends DLSNotification {
  const factory _DLSNotificationTaskAnyString(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final String text1,
          required final String text2,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAnyString;
  const _DLSNotificationTaskAnyString._() : super._();

  factory _DLSNotificationTaskAnyString.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskAnyString.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;

  /// текст без выделения
  /// например: добавили 12 файлов к мероприятию
  String get text1;

  /// текст с выделением
  /// например: Планирование планов
  String get text2;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAnyStringCopyWith<_$_DLSNotificationTaskAnyString>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddYouAssignerCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddYouAssignerCopyWith(
          _$_DLSNotificationTaskAddYouAssigner value,
          $Res Function(_$_DLSNotificationTaskAddYouAssigner) then) =
      __$$_DLSNotificationTaskAddYouAssignerCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddYouAssignerCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskAddYouAssigner>
    implements _$$_DLSNotificationTaskAddYouAssignerCopyWith<$Res> {
  __$$_DLSNotificationTaskAddYouAssignerCopyWithImpl(
      _$_DLSNotificationTaskAddYouAssigner _value,
      $Res Function(_$_DLSNotificationTaskAddYouAssigner) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddYouAssigner(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddYouAssigner
    extends _DLSNotificationTaskAddYouAssigner {
  const _$_DLSNotificationTaskAddYouAssigner(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskAddYouAssigner',
        super._();

  factory _$_DLSNotificationTaskAddYouAssigner.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddYouAssignerFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddYouAssigner(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddYouAssigner &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddYouAssignerCopyWith<
          _$_DLSNotificationTaskAddYouAssigner>
      get copyWith => __$$_DLSNotificationTaskAddYouAssignerCopyWithImpl<
          _$_DLSNotificationTaskAddYouAssigner>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddYouAssigner(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddYouAssigner?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddYouAssigner != null) {
      return taskAddYouAssigner(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddYouAssigner(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddYouAssigner?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddYouAssigner != null) {
      return taskAddYouAssigner(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddYouAssignerToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddYouAssigner extends DLSNotification {
  const factory _DLSNotificationTaskAddYouAssigner(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddYouAssigner;
  const _DLSNotificationTaskAddYouAssigner._() : super._();

  factory _DLSNotificationTaskAddYouAssigner.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddYouAssigner.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddYouAssignerCopyWith<
          _$_DLSNotificationTaskAddYouAssigner>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddYouWatcherCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddYouWatcherCopyWith(
          _$_DLSNotificationTaskAddYouWatcher value,
          $Res Function(_$_DLSNotificationTaskAddYouWatcher) then) =
      __$$_DLSNotificationTaskAddYouWatcherCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddYouWatcherCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskAddYouWatcher>
    implements _$$_DLSNotificationTaskAddYouWatcherCopyWith<$Res> {
  __$$_DLSNotificationTaskAddYouWatcherCopyWithImpl(
      _$_DLSNotificationTaskAddYouWatcher _value,
      $Res Function(_$_DLSNotificationTaskAddYouWatcher) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddYouWatcher(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddYouWatcher
    extends _DLSNotificationTaskAddYouWatcher {
  const _$_DLSNotificationTaskAddYouWatcher(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskAddYouWatcher',
        super._();

  factory _$_DLSNotificationTaskAddYouWatcher.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddYouWatcherFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddYouWatcher(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddYouWatcher &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddYouWatcherCopyWith<
          _$_DLSNotificationTaskAddYouWatcher>
      get copyWith => __$$_DLSNotificationTaskAddYouWatcherCopyWithImpl<
          _$_DLSNotificationTaskAddYouWatcher>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddYouWatcher(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddYouWatcher?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddYouWatcher != null) {
      return taskAddYouWatcher(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddYouWatcher(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddYouWatcher?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddYouWatcher != null) {
      return taskAddYouWatcher(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddYouWatcherToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddYouWatcher extends DLSNotification {
  const factory _DLSNotificationTaskAddYouWatcher(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddYouWatcher;
  const _DLSNotificationTaskAddYouWatcher._() : super._();

  factory _DLSNotificationTaskAddYouWatcher.fromJson(
      Map<String, dynamic> json) = _$_DLSNotificationTaskAddYouWatcher.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddYouWatcherCopyWith<
          _$_DLSNotificationTaskAddYouWatcher>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddYouResponsibleCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddYouResponsibleCopyWith(
          _$_DLSNotificationTaskAddYouResponsible value,
          $Res Function(_$_DLSNotificationTaskAddYouResponsible) then) =
      __$$_DLSNotificationTaskAddYouResponsibleCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddYouResponsibleCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskAddYouResponsible>
    implements _$$_DLSNotificationTaskAddYouResponsibleCopyWith<$Res> {
  __$$_DLSNotificationTaskAddYouResponsibleCopyWithImpl(
      _$_DLSNotificationTaskAddYouResponsible _value,
      $Res Function(_$_DLSNotificationTaskAddYouResponsible) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddYouResponsible(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddYouResponsible
    extends _DLSNotificationTaskAddYouResponsible {
  const _$_DLSNotificationTaskAddYouResponsible(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskAddYouResponsible',
        super._();

  factory _$_DLSNotificationTaskAddYouResponsible.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddYouResponsibleFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddYouResponsible(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddYouResponsible &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddYouResponsibleCopyWith<
          _$_DLSNotificationTaskAddYouResponsible>
      get copyWith => __$$_DLSNotificationTaskAddYouResponsibleCopyWithImpl<
          _$_DLSNotificationTaskAddYouResponsible>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddYouResponsible(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddYouResponsible?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddYouResponsible != null) {
      return taskAddYouResponsible(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddYouResponsible(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddYouResponsible?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddYouResponsible != null) {
      return taskAddYouResponsible(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddYouResponsibleToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddYouResponsible extends DLSNotification {
  const factory _DLSNotificationTaskAddYouResponsible(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddYouResponsible;
  const _DLSNotificationTaskAddYouResponsible._() : super._();

  factory _DLSNotificationTaskAddYouResponsible.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddYouResponsible.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddYouResponsibleCopyWith<
          _$_DLSNotificationTaskAddYouResponsible>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddAssignersCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddAssignersCopyWith(
          _$_DLSNotificationTaskAddAssigners value,
          $Res Function(_$_DLSNotificationTaskAddAssigners) then) =
      __$$_DLSNotificationTaskAddAssignersCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddAssignersCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskAddAssigners>
    implements _$$_DLSNotificationTaskAddAssignersCopyWith<$Res> {
  __$$_DLSNotificationTaskAddAssignersCopyWithImpl(
      _$_DLSNotificationTaskAddAssigners _value,
      $Res Function(_$_DLSNotificationTaskAddAssigners) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? users = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddAssigners(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddAssigners
    extends _DLSNotificationTaskAddAssigners {
  const _$_DLSNotificationTaskAddAssigners(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'taskAddAssigners',
        super._();

  factory _$_DLSNotificationTaskAddAssigners.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddAssignersFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationUser> _users;
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddAssigners(nObject: $nObject, user: $user, users: $users, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddAssigners &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_users), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddAssignersCopyWith<
          _$_DLSNotificationTaskAddAssigners>
      get copyWith => __$$_DLSNotificationTaskAddAssignersCopyWithImpl<
          _$_DLSNotificationTaskAddAssigners>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddAssigners(nObject, user, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddAssigners?.call(nObject, user, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddAssigners != null) {
      return taskAddAssigners(nObject, user, users, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddAssigners(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddAssigners?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddAssigners != null) {
      return taskAddAssigners(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddAssignersToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddAssigners extends DLSNotification {
  const factory _DLSNotificationTaskAddAssigners(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationUser> users,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddAssigners;
  const _DLSNotificationTaskAddAssigners._() : super._();

  factory _DLSNotificationTaskAddAssigners.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddAssigners.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationUser> get users;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddAssignersCopyWith<
          _$_DLSNotificationTaskAddAssigners>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddResponsibleCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddResponsibleCopyWith(
          _$_DLSNotificationTaskAddResponsible value,
          $Res Function(_$_DLSNotificationTaskAddResponsible) then) =
      __$$_DLSNotificationTaskAddResponsibleCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddResponsibleCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskAddResponsible>
    implements _$$_DLSNotificationTaskAddResponsibleCopyWith<$Res> {
  __$$_DLSNotificationTaskAddResponsibleCopyWithImpl(
      _$_DLSNotificationTaskAddResponsible _value,
      $Res Function(_$_DLSNotificationTaskAddResponsible) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? users = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddResponsible(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddResponsible
    extends _DLSNotificationTaskAddResponsible {
  const _$_DLSNotificationTaskAddResponsible(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'taskAddResponsible',
        super._();

  factory _$_DLSNotificationTaskAddResponsible.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddResponsibleFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationUser> _users;
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddResponsible(nObject: $nObject, user: $user, users: $users, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddResponsible &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_users), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddResponsibleCopyWith<
          _$_DLSNotificationTaskAddResponsible>
      get copyWith => __$$_DLSNotificationTaskAddResponsibleCopyWithImpl<
          _$_DLSNotificationTaskAddResponsible>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddResponsible(nObject, user, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddResponsible?.call(nObject, user, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddResponsible != null) {
      return taskAddResponsible(nObject, user, users, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddResponsible(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddResponsible?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddResponsible != null) {
      return taskAddResponsible(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddResponsibleToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddResponsible extends DLSNotification {
  const factory _DLSNotificationTaskAddResponsible(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationUser> users,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddResponsible;
  const _DLSNotificationTaskAddResponsible._() : super._();

  factory _DLSNotificationTaskAddResponsible.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddResponsible.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationUser> get users;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddResponsibleCopyWith<
          _$_DLSNotificationTaskAddResponsible>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskChangeStatusCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskChangeStatusCopyWith(
          _$_DLSNotificationTaskChangeStatus value,
          $Res Function(_$_DLSNotificationTaskChangeStatus) then) =
      __$$_DLSNotificationTaskChangeStatusCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      DLSNotificationObjectStatus statusPrev,
      DLSNotificationObjectStatus statusCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskChangeStatusCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskChangeStatus>
    implements _$$_DLSNotificationTaskChangeStatusCopyWith<$Res> {
  __$$_DLSNotificationTaskChangeStatusCopyWithImpl(
      _$_DLSNotificationTaskChangeStatus _value,
      $Res Function(_$_DLSNotificationTaskChangeStatus) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? statusPrev = null,
    Object? statusCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskChangeStatus(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      statusPrev: null == statusPrev
          ? _value.statusPrev
          : statusPrev // ignore: cast_nullable_to_non_nullable
              as DLSNotificationObjectStatus,
      statusCur: null == statusCur
          ? _value.statusCur
          : statusCur // ignore: cast_nullable_to_non_nullable
              as DLSNotificationObjectStatus,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskChangeStatus
    extends _DLSNotificationTaskChangeStatus {
  const _$_DLSNotificationTaskChangeStatus(
      {required this.nObject,
      required this.user,
      required this.statusPrev,
      required this.statusCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskChangeStatus',
        super._();

  factory _$_DLSNotificationTaskChangeStatus.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskChangeStatusFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  final DLSNotificationObjectStatus statusPrev;
  @override
  final DLSNotificationObjectStatus statusCur;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskChangeStatus(nObject: $nObject, user: $user, statusPrev: $statusPrev, statusCur: $statusCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskChangeStatus &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.statusPrev, statusPrev) ||
                other.statusPrev == statusPrev) &&
            (identical(other.statusCur, statusCur) ||
                other.statusCur == statusCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, statusPrev, statusCur, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskChangeStatusCopyWith<
          _$_DLSNotificationTaskChangeStatus>
      get copyWith => __$$_DLSNotificationTaskChangeStatusCopyWithImpl<
          _$_DLSNotificationTaskChangeStatus>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskChangeStatus(nObject, user, statusPrev, statusCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskChangeStatus?.call(
        nObject, user, statusPrev, statusCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskChangeStatus != null) {
      return taskChangeStatus(nObject, user, statusPrev, statusCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskChangeStatus(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskChangeStatus?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskChangeStatus != null) {
      return taskChangeStatus(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskChangeStatusToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskChangeStatus extends DLSNotification {
  const factory _DLSNotificationTaskChangeStatus(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final DLSNotificationObjectStatus statusPrev,
          required final DLSNotificationObjectStatus statusCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskChangeStatus;
  const _DLSNotificationTaskChangeStatus._() : super._();

  factory _DLSNotificationTaskChangeStatus.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskChangeStatus.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  DLSNotificationObjectStatus get statusPrev;
  DLSNotificationObjectStatus get statusCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskChangeStatusCopyWith<
          _$_DLSNotificationTaskChangeStatus>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskChangeDeadlineCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskChangeDeadlineCopyWith(
          _$_DLSNotificationTaskChangeDeadline value,
          $Res Function(_$_DLSNotificationTaskChangeDeadline) then) =
      __$$_DLSNotificationTaskChangeDeadlineCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      DateTime deadlinePrev,
      DateTime deadlineCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskChangeDeadlineCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskChangeDeadline>
    implements _$$_DLSNotificationTaskChangeDeadlineCopyWith<$Res> {
  __$$_DLSNotificationTaskChangeDeadlineCopyWithImpl(
      _$_DLSNotificationTaskChangeDeadline _value,
      $Res Function(_$_DLSNotificationTaskChangeDeadline) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? deadlinePrev = null,
    Object? deadlineCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskChangeDeadline(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      deadlinePrev: null == deadlinePrev
          ? _value.deadlinePrev
          : deadlinePrev // ignore: cast_nullable_to_non_nullable
              as DateTime,
      deadlineCur: null == deadlineCur
          ? _value.deadlineCur
          : deadlineCur // ignore: cast_nullable_to_non_nullable
              as DateTime,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskChangeDeadline
    extends _DLSNotificationTaskChangeDeadline {
  const _$_DLSNotificationTaskChangeDeadline(
      {required this.nObject,
      required this.user,
      required this.deadlinePrev,
      required this.deadlineCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskChangeDeadline',
        super._();

  factory _$_DLSNotificationTaskChangeDeadline.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskChangeDeadlineFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  final DateTime deadlinePrev;
  @override
  final DateTime deadlineCur;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskChangeDeadline(nObject: $nObject, user: $user, deadlinePrev: $deadlinePrev, deadlineCur: $deadlineCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskChangeDeadline &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.deadlinePrev, deadlinePrev) ||
                other.deadlinePrev == deadlinePrev) &&
            (identical(other.deadlineCur, deadlineCur) ||
                other.deadlineCur == deadlineCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, nObject, user, deadlinePrev, deadlineCur, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskChangeDeadlineCopyWith<
          _$_DLSNotificationTaskChangeDeadline>
      get copyWith => __$$_DLSNotificationTaskChangeDeadlineCopyWithImpl<
          _$_DLSNotificationTaskChangeDeadline>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskChangeDeadline(
        nObject, user, deadlinePrev, deadlineCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskChangeDeadline?.call(
        nObject, user, deadlinePrev, deadlineCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskChangeDeadline != null) {
      return taskChangeDeadline(
          nObject, user, deadlinePrev, deadlineCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskChangeDeadline(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskChangeDeadline?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskChangeDeadline != null) {
      return taskChangeDeadline(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskChangeDeadlineToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskChangeDeadline extends DLSNotification {
  const factory _DLSNotificationTaskChangeDeadline(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final DateTime deadlinePrev,
          required final DateTime deadlineCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskChangeDeadline;
  const _DLSNotificationTaskChangeDeadline._() : super._();

  factory _DLSNotificationTaskChangeDeadline.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskChangeDeadline.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  DateTime get deadlinePrev;
  DateTime get deadlineCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskChangeDeadlineCopyWith<
          _$_DLSNotificationTaskChangeDeadline>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskChangePriorityCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskChangePriorityCopyWith(
          _$_DLSNotificationTaskChangePriority value,
          $Res Function(_$_DLSNotificationTaskChangePriority) then) =
      __$$_DLSNotificationTaskChangePriorityCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      DLSNotificationObjectPriority priorityPrev,
      DLSNotificationObjectPriority priorityCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskChangePriorityCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskChangePriority>
    implements _$$_DLSNotificationTaskChangePriorityCopyWith<$Res> {
  __$$_DLSNotificationTaskChangePriorityCopyWithImpl(
      _$_DLSNotificationTaskChangePriority _value,
      $Res Function(_$_DLSNotificationTaskChangePriority) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? priorityPrev = null,
    Object? priorityCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskChangePriority(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      priorityPrev: null == priorityPrev
          ? _value.priorityPrev
          : priorityPrev // ignore: cast_nullable_to_non_nullable
              as DLSNotificationObjectPriority,
      priorityCur: null == priorityCur
          ? _value.priorityCur
          : priorityCur // ignore: cast_nullable_to_non_nullable
              as DLSNotificationObjectPriority,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskChangePriority
    extends _DLSNotificationTaskChangePriority {
  const _$_DLSNotificationTaskChangePriority(
      {required this.nObject,
      required this.user,
      required this.priorityPrev,
      required this.priorityCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskChangePriority',
        super._();

  factory _$_DLSNotificationTaskChangePriority.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskChangePriorityFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  final DLSNotificationObjectPriority priorityPrev;
  @override
  final DLSNotificationObjectPriority priorityCur;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskChangePriority(nObject: $nObject, user: $user, priorityPrev: $priorityPrev, priorityCur: $priorityCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskChangePriority &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.priorityPrev, priorityPrev) ||
                other.priorityPrev == priorityPrev) &&
            (identical(other.priorityCur, priorityCur) ||
                other.priorityCur == priorityCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, nObject, user, priorityPrev, priorityCur, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskChangePriorityCopyWith<
          _$_DLSNotificationTaskChangePriority>
      get copyWith => __$$_DLSNotificationTaskChangePriorityCopyWithImpl<
          _$_DLSNotificationTaskChangePriority>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskChangePriority(
        nObject, user, priorityPrev, priorityCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskChangePriority?.call(
        nObject, user, priorityPrev, priorityCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskChangePriority != null) {
      return taskChangePriority(
          nObject, user, priorityPrev, priorityCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskChangePriority(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskChangePriority?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskChangePriority != null) {
      return taskChangePriority(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskChangePriorityToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskChangePriority extends DLSNotification {
  const factory _DLSNotificationTaskChangePriority(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final DLSNotificationObjectPriority priorityPrev,
          required final DLSNotificationObjectPriority priorityCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskChangePriority;
  const _DLSNotificationTaskChangePriority._() : super._();

  factory _DLSNotificationTaskChangePriority.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskChangePriority.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  DLSNotificationObjectPriority get priorityPrev;
  DLSNotificationObjectPriority get priorityCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskChangePriorityCopyWith<
          _$_DLSNotificationTaskChangePriority>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddFilesCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddFilesCopyWith(
          _$_DLSNotificationTaskAddFiles value,
          $Res Function(_$_DLSNotificationTaskAddFiles) then) =
      __$$_DLSNotificationTaskAddFilesCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<dynamic> files,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddFilesCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskAddFiles>
    implements _$$_DLSNotificationTaskAddFilesCopyWith<$Res> {
  __$$_DLSNotificationTaskAddFilesCopyWithImpl(
      _$_DLSNotificationTaskAddFiles _value,
      $Res Function(_$_DLSNotificationTaskAddFiles) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? files = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddFiles(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      files: null == files
          ? _value._files
          : files // ignore: cast_nullable_to_non_nullable
              as List<dynamic>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddFiles extends _DLSNotificationTaskAddFiles {
  const _$_DLSNotificationTaskAddFiles(
      {required this.nObject,
      required this.user,
      required final List<dynamic> files,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _files = files,
        $type = $type ?? 'taskAddFiles',
        super._();

  factory _$_DLSNotificationTaskAddFiles.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddFilesFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<dynamic> _files;
  @override
  List<dynamic> get files {
    if (_files is EqualUnmodifiableListView) return _files;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_files);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddFiles(nObject: $nObject, user: $user, files: $files, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddFiles &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._files, _files) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_files), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddFilesCopyWith<_$_DLSNotificationTaskAddFiles>
      get copyWith => __$$_DLSNotificationTaskAddFilesCopyWithImpl<
          _$_DLSNotificationTaskAddFiles>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddFiles(nObject, user, files, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddFiles?.call(nObject, user, files, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddFiles != null) {
      return taskAddFiles(nObject, user, files, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddFiles(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddFiles?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddFiles != null) {
      return taskAddFiles(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddFilesToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddFiles extends DLSNotification {
  const factory _DLSNotificationTaskAddFiles(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<dynamic> files,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddFiles;
  const _DLSNotificationTaskAddFiles._() : super._();

  factory _DLSNotificationTaskAddFiles.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddFiles.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<dynamic> get files;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddFilesCopyWith<_$_DLSNotificationTaskAddFiles>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskRemoveFilesCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskRemoveFilesCopyWith(
          _$_DLSNotificationTaskRemoveFiles value,
          $Res Function(_$_DLSNotificationTaskRemoveFiles) then) =
      __$$_DLSNotificationTaskRemoveFilesCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<dynamic> files,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskRemoveFilesCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskRemoveFiles>
    implements _$$_DLSNotificationTaskRemoveFilesCopyWith<$Res> {
  __$$_DLSNotificationTaskRemoveFilesCopyWithImpl(
      _$_DLSNotificationTaskRemoveFiles _value,
      $Res Function(_$_DLSNotificationTaskRemoveFiles) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? files = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskRemoveFiles(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      files: null == files
          ? _value._files
          : files // ignore: cast_nullable_to_non_nullable
              as List<dynamic>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskRemoveFiles
    extends _DLSNotificationTaskRemoveFiles {
  const _$_DLSNotificationTaskRemoveFiles(
      {required this.nObject,
      required this.user,
      required final List<dynamic> files,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _files = files,
        $type = $type ?? 'taskRemoveFiles',
        super._();

  factory _$_DLSNotificationTaskRemoveFiles.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskRemoveFilesFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<dynamic> _files;
  @override
  List<dynamic> get files {
    if (_files is EqualUnmodifiableListView) return _files;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_files);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskRemoveFiles(nObject: $nObject, user: $user, files: $files, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskRemoveFiles &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._files, _files) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_files), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskRemoveFilesCopyWith<_$_DLSNotificationTaskRemoveFiles>
      get copyWith => __$$_DLSNotificationTaskRemoveFilesCopyWithImpl<
          _$_DLSNotificationTaskRemoveFiles>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskRemoveFiles(nObject, user, files, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskRemoveFiles?.call(nObject, user, files, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveFiles != null) {
      return taskRemoveFiles(nObject, user, files, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskRemoveFiles(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskRemoveFiles?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveFiles != null) {
      return taskRemoveFiles(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskRemoveFilesToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskRemoveFiles extends DLSNotification {
  const factory _DLSNotificationTaskRemoveFiles(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<dynamic> files,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskRemoveFiles;
  const _DLSNotificationTaskRemoveFiles._() : super._();

  factory _DLSNotificationTaskRemoveFiles.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskRemoveFiles.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<dynamic> get files;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskRemoveFilesCopyWith<_$_DLSNotificationTaskRemoveFiles>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddWatchersCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddWatchersCopyWith(
          _$_DLSNotificationTaskAddWatchers value,
          $Res Function(_$_DLSNotificationTaskAddWatchers) then) =
      __$$_DLSNotificationTaskAddWatchersCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddWatchersCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskAddWatchers>
    implements _$$_DLSNotificationTaskAddWatchersCopyWith<$Res> {
  __$$_DLSNotificationTaskAddWatchersCopyWithImpl(
      _$_DLSNotificationTaskAddWatchers _value,
      $Res Function(_$_DLSNotificationTaskAddWatchers) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? users = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddWatchers(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddWatchers
    extends _DLSNotificationTaskAddWatchers {
  const _$_DLSNotificationTaskAddWatchers(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'taskAddWatchers',
        super._();

  factory _$_DLSNotificationTaskAddWatchers.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddWatchersFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationUser> _users;
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddWatchers(nObject: $nObject, user: $user, users: $users, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddWatchers &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_users), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddWatchersCopyWith<_$_DLSNotificationTaskAddWatchers>
      get copyWith => __$$_DLSNotificationTaskAddWatchersCopyWithImpl<
          _$_DLSNotificationTaskAddWatchers>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddWatchers(nObject, user, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddWatchers?.call(nObject, user, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddWatchers != null) {
      return taskAddWatchers(nObject, user, users, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddWatchers(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddWatchers?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddWatchers != null) {
      return taskAddWatchers(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddWatchersToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddWatchers extends DLSNotification {
  const factory _DLSNotificationTaskAddWatchers(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationUser> users,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddWatchers;
  const _DLSNotificationTaskAddWatchers._() : super._();

  factory _DLSNotificationTaskAddWatchers.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddWatchers.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationUser> get users;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddWatchersCopyWith<_$_DLSNotificationTaskAddWatchers>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskRemoveWatchersCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskRemoveWatchersCopyWith(
          _$_DLSNotificationTaskRemoveWatchers value,
          $Res Function(_$_DLSNotificationTaskRemoveWatchers) then) =
      __$$_DLSNotificationTaskRemoveWatchersCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskRemoveWatchersCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskRemoveWatchers>
    implements _$$_DLSNotificationTaskRemoveWatchersCopyWith<$Res> {
  __$$_DLSNotificationTaskRemoveWatchersCopyWithImpl(
      _$_DLSNotificationTaskRemoveWatchers _value,
      $Res Function(_$_DLSNotificationTaskRemoveWatchers) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? users = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskRemoveWatchers(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskRemoveWatchers
    extends _DLSNotificationTaskRemoveWatchers {
  const _$_DLSNotificationTaskRemoveWatchers(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'taskRemoveWatchers',
        super._();

  factory _$_DLSNotificationTaskRemoveWatchers.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskRemoveWatchersFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationUser> _users;
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskRemoveWatchers(nObject: $nObject, user: $user, users: $users, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskRemoveWatchers &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_users), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskRemoveWatchersCopyWith<
          _$_DLSNotificationTaskRemoveWatchers>
      get copyWith => __$$_DLSNotificationTaskRemoveWatchersCopyWithImpl<
          _$_DLSNotificationTaskRemoveWatchers>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskRemoveWatchers(nObject, user, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskRemoveWatchers?.call(nObject, user, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveWatchers != null) {
      return taskRemoveWatchers(nObject, user, users, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskRemoveWatchers(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskRemoveWatchers?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveWatchers != null) {
      return taskRemoveWatchers(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskRemoveWatchersToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskRemoveWatchers extends DLSNotification {
  const factory _DLSNotificationTaskRemoveWatchers(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationUser> users,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskRemoveWatchers;
  const _DLSNotificationTaskRemoveWatchers._() : super._();

  factory _DLSNotificationTaskRemoveWatchers.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskRemoveWatchers.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationUser> get users;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskRemoveWatchersCopyWith<
          _$_DLSNotificationTaskRemoveWatchers>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddDependenciesCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddDependenciesCopyWith(
          _$_DLSNotificationTaskAddDependencies value,
          $Res Function(_$_DLSNotificationTaskAddDependencies) then) =
      __$$_DLSNotificationTaskAddDependenciesCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddDependenciesCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskAddDependencies>
    implements _$$_DLSNotificationTaskAddDependenciesCopyWith<$Res> {
  __$$_DLSNotificationTaskAddDependenciesCopyWithImpl(
      _$_DLSNotificationTaskAddDependencies _value,
      $Res Function(_$_DLSNotificationTaskAddDependencies) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddDependencies(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddDependencies
    extends _DLSNotificationTaskAddDependencies {
  const _$_DLSNotificationTaskAddDependencies(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskAddDependencies',
        super._();

  factory _$_DLSNotificationTaskAddDependencies.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddDependenciesFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;

  /// todo непонятно надо ли показывать зависимость или
  /// только задачу и информировать что к ней добавили зависимость
// required List<dynamic> dependencies,
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddDependencies(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddDependencies &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddDependenciesCopyWith<
          _$_DLSNotificationTaskAddDependencies>
      get copyWith => __$$_DLSNotificationTaskAddDependenciesCopyWithImpl<
          _$_DLSNotificationTaskAddDependencies>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddDependencies(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddDependencies?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddDependencies != null) {
      return taskAddDependencies(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddDependencies(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddDependencies?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddDependencies != null) {
      return taskAddDependencies(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddDependenciesToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddDependencies extends DLSNotification {
  const factory _DLSNotificationTaskAddDependencies(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddDependencies;
  const _DLSNotificationTaskAddDependencies._() : super._();

  factory _DLSNotificationTaskAddDependencies.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddDependencies.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override

  /// todo непонятно надо ли показывать зависимость или
  /// только задачу и информировать что к ней добавили зависимость
// required List<dynamic> dependencies,
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddDependenciesCopyWith<
          _$_DLSNotificationTaskAddDependencies>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskRemoveDependenciesCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskRemoveDependenciesCopyWith(
          _$_DLSNotificationTaskRemoveDependencies value,
          $Res Function(_$_DLSNotificationTaskRemoveDependencies) then) =
      __$$_DLSNotificationTaskRemoveDependenciesCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskRemoveDependenciesCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskRemoveDependencies>
    implements _$$_DLSNotificationTaskRemoveDependenciesCopyWith<$Res> {
  __$$_DLSNotificationTaskRemoveDependenciesCopyWithImpl(
      _$_DLSNotificationTaskRemoveDependencies _value,
      $Res Function(_$_DLSNotificationTaskRemoveDependencies) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskRemoveDependencies(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskRemoveDependencies
    extends _DLSNotificationTaskRemoveDependencies {
  const _$_DLSNotificationTaskRemoveDependencies(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskRemoveDependencies',
        super._();

  factory _$_DLSNotificationTaskRemoveDependencies.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskRemoveDependenciesFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;

  /// todo непонятно надо ли показывать зависимость или
  /// только задачу и информировать что к ней добавили зависимость
// required List<dynamic> dependencies,
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskRemoveDependencies(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskRemoveDependencies &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskRemoveDependenciesCopyWith<
          _$_DLSNotificationTaskRemoveDependencies>
      get copyWith => __$$_DLSNotificationTaskRemoveDependenciesCopyWithImpl<
          _$_DLSNotificationTaskRemoveDependencies>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskRemoveDependencies(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskRemoveDependencies?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveDependencies != null) {
      return taskRemoveDependencies(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskRemoveDependencies(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskRemoveDependencies?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveDependencies != null) {
      return taskRemoveDependencies(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskRemoveDependenciesToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskRemoveDependencies extends DLSNotification {
  const factory _DLSNotificationTaskRemoveDependencies(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskRemoveDependencies;
  const _DLSNotificationTaskRemoveDependencies._() : super._();

  factory _DLSNotificationTaskRemoveDependencies.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskRemoveDependencies.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override

  /// todo непонятно надо ли показывать зависимость или
  /// только задачу и информировать что к ней добавили зависимость
// required List<dynamic> dependencies,
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskRemoveDependenciesCopyWith<
          _$_DLSNotificationTaskRemoveDependencies>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddSprintsCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddSprintsCopyWith(
          _$_DLSNotificationTaskAddSprints value,
          $Res Function(_$_DLSNotificationTaskAddSprints) then) =
      __$$_DLSNotificationTaskAddSprintsCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationSprint> sprints,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddSprintsCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskAddSprints>
    implements _$$_DLSNotificationTaskAddSprintsCopyWith<$Res> {
  __$$_DLSNotificationTaskAddSprintsCopyWithImpl(
      _$_DLSNotificationTaskAddSprints _value,
      $Res Function(_$_DLSNotificationTaskAddSprints) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? sprints = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddSprints(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      sprints: null == sprints
          ? _value._sprints
          : sprints // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationSprint>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddSprints extends _DLSNotificationTaskAddSprints {
  const _$_DLSNotificationTaskAddSprints(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationSprint> sprints,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _sprints = sprints,
        $type = $type ?? 'taskAddSprints',
        super._();

  factory _$_DLSNotificationTaskAddSprints.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddSprintsFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationSprint> _sprints;
  @override
  List<DLSNotificationSprint> get sprints {
    if (_sprints is EqualUnmodifiableListView) return _sprints;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_sprints);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddSprints(nObject: $nObject, user: $user, sprints: $sprints, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddSprints &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._sprints, _sprints) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_sprints), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddSprintsCopyWith<_$_DLSNotificationTaskAddSprints>
      get copyWith => __$$_DLSNotificationTaskAddSprintsCopyWithImpl<
          _$_DLSNotificationTaskAddSprints>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddSprints(nObject, user, sprints, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddSprints?.call(nObject, user, sprints, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddSprints != null) {
      return taskAddSprints(nObject, user, sprints, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddSprints(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddSprints?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddSprints != null) {
      return taskAddSprints(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddSprintsToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddSprints extends DLSNotification {
  const factory _DLSNotificationTaskAddSprints(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationSprint> sprints,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddSprints;
  const _DLSNotificationTaskAddSprints._() : super._();

  factory _DLSNotificationTaskAddSprints.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddSprints.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationSprint> get sprints;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddSprintsCopyWith<_$_DLSNotificationTaskAddSprints>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskRemoveSprintsCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskRemoveSprintsCopyWith(
          _$_DLSNotificationTaskRemoveSprints value,
          $Res Function(_$_DLSNotificationTaskRemoveSprints) then) =
      __$$_DLSNotificationTaskRemoveSprintsCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationSprint> sprints,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskRemoveSprintsCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskRemoveSprints>
    implements _$$_DLSNotificationTaskRemoveSprintsCopyWith<$Res> {
  __$$_DLSNotificationTaskRemoveSprintsCopyWithImpl(
      _$_DLSNotificationTaskRemoveSprints _value,
      $Res Function(_$_DLSNotificationTaskRemoveSprints) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? sprints = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskRemoveSprints(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      sprints: null == sprints
          ? _value._sprints
          : sprints // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationSprint>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskRemoveSprints
    extends _DLSNotificationTaskRemoveSprints {
  const _$_DLSNotificationTaskRemoveSprints(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationSprint> sprints,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _sprints = sprints,
        $type = $type ?? 'taskRemoveSprints',
        super._();

  factory _$_DLSNotificationTaskRemoveSprints.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskRemoveSprintsFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationSprint> _sprints;
  @override
  List<DLSNotificationSprint> get sprints {
    if (_sprints is EqualUnmodifiableListView) return _sprints;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_sprints);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskRemoveSprints(nObject: $nObject, user: $user, sprints: $sprints, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskRemoveSprints &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._sprints, _sprints) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_sprints), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskRemoveSprintsCopyWith<
          _$_DLSNotificationTaskRemoveSprints>
      get copyWith => __$$_DLSNotificationTaskRemoveSprintsCopyWithImpl<
          _$_DLSNotificationTaskRemoveSprints>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskRemoveSprints(nObject, user, sprints, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskRemoveSprints?.call(nObject, user, sprints, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveSprints != null) {
      return taskRemoveSprints(nObject, user, sprints, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskRemoveSprints(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskRemoveSprints?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveSprints != null) {
      return taskRemoveSprints(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskRemoveSprintsToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskRemoveSprints extends DLSNotification {
  const factory _DLSNotificationTaskRemoveSprints(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationSprint> sprints,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskRemoveSprints;
  const _DLSNotificationTaskRemoveSprints._() : super._();

  factory _DLSNotificationTaskRemoveSprints.fromJson(
      Map<String, dynamic> json) = _$_DLSNotificationTaskRemoveSprints.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationSprint> get sprints;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskRemoveSprintsCopyWith<
          _$_DLSNotificationTaskRemoveSprints>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddEventsCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddEventsCopyWith(
          _$_DLSNotificationTaskAddEvents value,
          $Res Function(_$_DLSNotificationTaskAddEvents) then) =
      __$$_DLSNotificationTaskAddEventsCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationEvent> events,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddEventsCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskAddEvents>
    implements _$$_DLSNotificationTaskAddEventsCopyWith<$Res> {
  __$$_DLSNotificationTaskAddEventsCopyWithImpl(
      _$_DLSNotificationTaskAddEvents _value,
      $Res Function(_$_DLSNotificationTaskAddEvents) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? events = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddEvents(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      events: null == events
          ? _value._events
          : events // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationEvent>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddEvents extends _DLSNotificationTaskAddEvents {
  const _$_DLSNotificationTaskAddEvents(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationEvent> events,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _events = events,
        $type = $type ?? 'taskAddEvents',
        super._();

  factory _$_DLSNotificationTaskAddEvents.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddEventsFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationEvent> _events;
  @override
  List<DLSNotificationEvent> get events {
    if (_events is EqualUnmodifiableListView) return _events;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_events);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddEvents(nObject: $nObject, user: $user, events: $events, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddEvents &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._events, _events) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_events), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddEventsCopyWith<_$_DLSNotificationTaskAddEvents>
      get copyWith => __$$_DLSNotificationTaskAddEventsCopyWithImpl<
          _$_DLSNotificationTaskAddEvents>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddEvents(nObject, user, events, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddEvents?.call(nObject, user, events, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddEvents != null) {
      return taskAddEvents(nObject, user, events, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddEvents(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddEvents?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddEvents != null) {
      return taskAddEvents(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddEventsToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddEvents extends DLSNotification {
  const factory _DLSNotificationTaskAddEvents(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationEvent> events,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddEvents;
  const _DLSNotificationTaskAddEvents._() : super._();

  factory _DLSNotificationTaskAddEvents.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddEvents.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationEvent> get events;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddEventsCopyWith<_$_DLSNotificationTaskAddEvents>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskRemoveEventsCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskRemoveEventsCopyWith(
          _$_DLSNotificationTaskRemoveEvents value,
          $Res Function(_$_DLSNotificationTaskRemoveEvents) then) =
      __$$_DLSNotificationTaskRemoveEventsCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationEvent> events,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskRemoveEventsCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskRemoveEvents>
    implements _$$_DLSNotificationTaskRemoveEventsCopyWith<$Res> {
  __$$_DLSNotificationTaskRemoveEventsCopyWithImpl(
      _$_DLSNotificationTaskRemoveEvents _value,
      $Res Function(_$_DLSNotificationTaskRemoveEvents) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? events = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskRemoveEvents(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      events: null == events
          ? _value._events
          : events // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationEvent>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskRemoveEvents
    extends _DLSNotificationTaskRemoveEvents {
  const _$_DLSNotificationTaskRemoveEvents(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationEvent> events,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _events = events,
        $type = $type ?? 'taskRemoveEvents',
        super._();

  factory _$_DLSNotificationTaskRemoveEvents.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskRemoveEventsFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationEvent> _events;
  @override
  List<DLSNotificationEvent> get events {
    if (_events is EqualUnmodifiableListView) return _events;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_events);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskRemoveEvents(nObject: $nObject, user: $user, events: $events, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskRemoveEvents &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._events, _events) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_events), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskRemoveEventsCopyWith<
          _$_DLSNotificationTaskRemoveEvents>
      get copyWith => __$$_DLSNotificationTaskRemoveEventsCopyWithImpl<
          _$_DLSNotificationTaskRemoveEvents>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskRemoveEvents(nObject, user, events, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskRemoveEvents?.call(nObject, user, events, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveEvents != null) {
      return taskRemoveEvents(nObject, user, events, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskRemoveEvents(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskRemoveEvents?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveEvents != null) {
      return taskRemoveEvents(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskRemoveEventsToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskRemoveEvents extends DLSNotification {
  const factory _DLSNotificationTaskRemoveEvents(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationEvent> events,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskRemoveEvents;
  const _DLSNotificationTaskRemoveEvents._() : super._();

  factory _DLSNotificationTaskRemoveEvents.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskRemoveEvents.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationEvent> get events;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskRemoveEventsCopyWith<
          _$_DLSNotificationTaskRemoveEvents>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskAddTodosCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskAddTodosCopyWith(
          _$_DLSNotificationTaskAddTodos value,
          $Res Function(_$_DLSNotificationTaskAddTodos) then) =
      __$$_DLSNotificationTaskAddTodosCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationTodo> todos,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskAddTodosCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskAddTodos>
    implements _$$_DLSNotificationTaskAddTodosCopyWith<$Res> {
  __$$_DLSNotificationTaskAddTodosCopyWithImpl(
      _$_DLSNotificationTaskAddTodos _value,
      $Res Function(_$_DLSNotificationTaskAddTodos) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? todos = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskAddTodos(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      todos: null == todos
          ? _value._todos
          : todos // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationTodo>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskAddTodos extends _DLSNotificationTaskAddTodos {
  const _$_DLSNotificationTaskAddTodos(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationTodo> todos,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _todos = todos,
        $type = $type ?? 'taskAddTodos',
        super._();

  factory _$_DLSNotificationTaskAddTodos.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskAddTodosFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationTodo> _todos;
  @override
  List<DLSNotificationTodo> get todos {
    if (_todos is EqualUnmodifiableListView) return _todos;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_todos);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddTodos(nObject: $nObject, user: $user, todos: $todos, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskAddTodos &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._todos, _todos) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_todos), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskAddTodosCopyWith<_$_DLSNotificationTaskAddTodos>
      get copyWith => __$$_DLSNotificationTaskAddTodosCopyWithImpl<
          _$_DLSNotificationTaskAddTodos>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddTodos(nObject, user, todos, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddTodos?.call(nObject, user, todos, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddTodos != null) {
      return taskAddTodos(nObject, user, todos, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddTodos(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddTodos?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddTodos != null) {
      return taskAddTodos(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskAddTodosToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskAddTodos extends DLSNotification {
  const factory _DLSNotificationTaskAddTodos(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationTodo> todos,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskAddTodos;
  const _DLSNotificationTaskAddTodos._() : super._();

  factory _DLSNotificationTaskAddTodos.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskAddTodos.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationTodo> get todos;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskAddTodosCopyWith<_$_DLSNotificationTaskAddTodos>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskRemoveTodosCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskRemoveTodosCopyWith(
          _$_DLSNotificationTaskRemoveTodos value,
          $Res Function(_$_DLSNotificationTaskRemoveTodos) then) =
      __$$_DLSNotificationTaskRemoveTodosCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationTodo> todos,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskRemoveTodosCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskRemoveTodos>
    implements _$$_DLSNotificationTaskRemoveTodosCopyWith<$Res> {
  __$$_DLSNotificationTaskRemoveTodosCopyWithImpl(
      _$_DLSNotificationTaskRemoveTodos _value,
      $Res Function(_$_DLSNotificationTaskRemoveTodos) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? todos = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskRemoveTodos(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      todos: null == todos
          ? _value._todos
          : todos // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationTodo>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskRemoveTodos
    extends _DLSNotificationTaskRemoveTodos {
  const _$_DLSNotificationTaskRemoveTodos(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationTodo> todos,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _todos = todos,
        $type = $type ?? 'taskRemoveTodos',
        super._();

  factory _$_DLSNotificationTaskRemoveTodos.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskRemoveTodosFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationTodo> _todos;
  @override
  List<DLSNotificationTodo> get todos {
    if (_todos is EqualUnmodifiableListView) return _todos;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_todos);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskRemoveTodos(nObject: $nObject, user: $user, todos: $todos, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskRemoveTodos &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._todos, _todos) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_todos), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskRemoveTodosCopyWith<_$_DLSNotificationTaskRemoveTodos>
      get copyWith => __$$_DLSNotificationTaskRemoveTodosCopyWithImpl<
          _$_DLSNotificationTaskRemoveTodos>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskRemoveTodos(nObject, user, todos, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskRemoveTodos?.call(nObject, user, todos, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveTodos != null) {
      return taskRemoveTodos(nObject, user, todos, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskRemoveTodos(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskRemoveTodos?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveTodos != null) {
      return taskRemoveTodos(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskRemoveTodosToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskRemoveTodos extends DLSNotification {
  const factory _DLSNotificationTaskRemoveTodos(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationTodo> todos,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskRemoveTodos;
  const _DLSNotificationTaskRemoveTodos._() : super._();

  factory _DLSNotificationTaskRemoveTodos.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskRemoveTodos.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationTodo> get todos;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskRemoveTodosCopyWith<_$_DLSNotificationTaskRemoveTodos>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskChildTasksCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskChildTasksCopyWith(
          _$_DLSNotificationTaskChildTasks value,
          $Res Function(_$_DLSNotificationTaskChildTasks) then) =
      __$$_DLSNotificationTaskChildTasksCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationTask> tasks,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskChildTasksCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskChildTasks>
    implements _$$_DLSNotificationTaskChildTasksCopyWith<$Res> {
  __$$_DLSNotificationTaskChildTasksCopyWithImpl(
      _$_DLSNotificationTaskChildTasks _value,
      $Res Function(_$_DLSNotificationTaskChildTasks) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? tasks = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskChildTasks(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      tasks: null == tasks
          ? _value._tasks
          : tasks // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationTask>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskChildTasks extends _DLSNotificationTaskChildTasks {
  const _$_DLSNotificationTaskChildTasks(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationTask> tasks,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _tasks = tasks,
        $type = $type ?? 'taskAddChildTasks',
        super._();

  factory _$_DLSNotificationTaskChildTasks.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskChildTasksFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationTask> _tasks;
  @override
  List<DLSNotificationTask> get tasks {
    if (_tasks is EqualUnmodifiableListView) return _tasks;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_tasks);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskAddChildTasks(nObject: $nObject, user: $user, tasks: $tasks, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskChildTasks &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._tasks, _tasks) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_tasks), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskChildTasksCopyWith<_$_DLSNotificationTaskChildTasks>
      get copyWith => __$$_DLSNotificationTaskChildTasksCopyWithImpl<
          _$_DLSNotificationTaskChildTasks>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskAddChildTasks(nObject, user, tasks, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskAddChildTasks?.call(nObject, user, tasks, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddChildTasks != null) {
      return taskAddChildTasks(nObject, user, tasks, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskAddChildTasks(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskAddChildTasks?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskAddChildTasks != null) {
      return taskAddChildTasks(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskChildTasksToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskChildTasks extends DLSNotification {
  const factory _DLSNotificationTaskChildTasks(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationTask> tasks,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskChildTasks;
  const _DLSNotificationTaskChildTasks._() : super._();

  factory _DLSNotificationTaskChildTasks.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskChildTasks.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationTask> get tasks;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskChildTasksCopyWith<_$_DLSNotificationTaskChildTasks>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskRemoveTasksCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskRemoveTasksCopyWith(
          _$_DLSNotificationTaskRemoveTasks value,
          $Res Function(_$_DLSNotificationTaskRemoveTasks) then) =
      __$$_DLSNotificationTaskRemoveTasksCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      List<DLSNotificationTask> tasks,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskRemoveTasksCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskRemoveTasks>
    implements _$$_DLSNotificationTaskRemoveTasksCopyWith<$Res> {
  __$$_DLSNotificationTaskRemoveTasksCopyWithImpl(
      _$_DLSNotificationTaskRemoveTasks _value,
      $Res Function(_$_DLSNotificationTaskRemoveTasks) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? tasks = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskRemoveTasks(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      tasks: null == tasks
          ? _value._tasks
          : tasks // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationTask>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskRemoveTasks
    extends _DLSNotificationTaskRemoveTasks {
  const _$_DLSNotificationTaskRemoveTasks(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationTask> tasks,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _tasks = tasks,
        $type = $type ?? 'taskRemoveChildTasks',
        super._();

  factory _$_DLSNotificationTaskRemoveTasks.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskRemoveTasksFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  final List<DLSNotificationTask> _tasks;
  @override
  List<DLSNotificationTask> get tasks {
    if (_tasks is EqualUnmodifiableListView) return _tasks;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_tasks);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskRemoveChildTasks(nObject: $nObject, user: $user, tasks: $tasks, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskRemoveTasks &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._tasks, _tasks) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_tasks), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskRemoveTasksCopyWith<_$_DLSNotificationTaskRemoveTasks>
      get copyWith => __$$_DLSNotificationTaskRemoveTasksCopyWithImpl<
          _$_DLSNotificationTaskRemoveTasks>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskRemoveChildTasks(nObject, user, tasks, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskRemoveChildTasks?.call(nObject, user, tasks, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveChildTasks != null) {
      return taskRemoveChildTasks(nObject, user, tasks, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskRemoveChildTasks(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskRemoveChildTasks?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRemoveChildTasks != null) {
      return taskRemoveChildTasks(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskRemoveTasksToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskRemoveTasks extends DLSNotification {
  const factory _DLSNotificationTaskRemoveTasks(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationTask> tasks,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskRemoveTasks;
  const _DLSNotificationTaskRemoveTasks._() : super._();

  factory _DLSNotificationTaskRemoveTasks.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskRemoveTasks.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  List<DLSNotificationTask> get tasks;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskRemoveTasksCopyWith<_$_DLSNotificationTaskRemoveTasks>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskRestrictAccessCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskRestrictAccessCopyWith(
          _$_DLSNotificationTaskRestrictAccess value,
          $Res Function(_$_DLSNotificationTaskRestrictAccess) then) =
      __$$_DLSNotificationTaskRestrictAccessCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskRestrictAccessCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskRestrictAccess>
    implements _$$_DLSNotificationTaskRestrictAccessCopyWith<$Res> {
  __$$_DLSNotificationTaskRestrictAccessCopyWithImpl(
      _$_DLSNotificationTaskRestrictAccess _value,
      $Res Function(_$_DLSNotificationTaskRestrictAccess) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskRestrictAccess(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskRestrictAccess
    extends _DLSNotificationTaskRestrictAccess {
  const _$_DLSNotificationTaskRestrictAccess(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskRestrictAccess',
        super._();

  factory _$_DLSNotificationTaskRestrictAccess.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskRestrictAccessFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskRestrictAccess(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskRestrictAccess &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskRestrictAccessCopyWith<
          _$_DLSNotificationTaskRestrictAccess>
      get copyWith => __$$_DLSNotificationTaskRestrictAccessCopyWithImpl<
          _$_DLSNotificationTaskRestrictAccess>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskRestrictAccess(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskRestrictAccess?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRestrictAccess != null) {
      return taskRestrictAccess(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskRestrictAccess(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskRestrictAccess?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskRestrictAccess != null) {
      return taskRestrictAccess(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskRestrictAccessToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskRestrictAccess extends DLSNotification {
  const factory _DLSNotificationTaskRestrictAccess(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskRestrictAccess;
  const _DLSNotificationTaskRestrictAccess._() : super._();

  factory _DLSNotificationTaskRestrictAccess.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationTaskRestrictAccess.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskRestrictAccessCopyWith<
          _$_DLSNotificationTaskRestrictAccess>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskExpandAccessCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskExpandAccessCopyWith(
          _$_DLSNotificationTaskExpandAccess value,
          $Res Function(_$_DLSNotificationTaskExpandAccess) then) =
      __$$_DLSNotificationTaskExpandAccessCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskExpandAccessCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskExpandAccess>
    implements _$$_DLSNotificationTaskExpandAccessCopyWith<$Res> {
  __$$_DLSNotificationTaskExpandAccessCopyWithImpl(
      _$_DLSNotificationTaskExpandAccess _value,
      $Res Function(_$_DLSNotificationTaskExpandAccess) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskExpandAccess(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskExpandAccess
    extends _DLSNotificationTaskExpandAccess {
  const _$_DLSNotificationTaskExpandAccess(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskExpandAccess',
        super._();

  factory _$_DLSNotificationTaskExpandAccess.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskExpandAccessFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskExpandAccess(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskExpandAccess &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskExpandAccessCopyWith<
          _$_DLSNotificationTaskExpandAccess>
      get copyWith => __$$_DLSNotificationTaskExpandAccessCopyWithImpl<
          _$_DLSNotificationTaskExpandAccess>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskExpandAccess(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskExpandAccess?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskExpandAccess != null) {
      return taskExpandAccess(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskExpandAccess(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskExpandAccess?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskExpandAccess != null) {
      return taskExpandAccess(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskExpandAccessToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskExpandAccess extends DLSNotification {
  const factory _DLSNotificationTaskExpandAccess(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskExpandAccess;
  const _DLSNotificationTaskExpandAccess._() : super._();

  factory _DLSNotificationTaskExpandAccess.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskExpandAccess.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskExpandAccessCopyWith<
          _$_DLSNotificationTaskExpandAccess>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskLockCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskLockCopyWith(_$_DLSNotificationTaskLock value,
          $Res Function(_$_DLSNotificationTaskLock) then) =
      __$$_DLSNotificationTaskLockCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskLockCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskLock>
    implements _$$_DLSNotificationTaskLockCopyWith<$Res> {
  __$$_DLSNotificationTaskLockCopyWithImpl(_$_DLSNotificationTaskLock _value,
      $Res Function(_$_DLSNotificationTaskLock) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskLock(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskLock extends _DLSNotificationTaskLock {
  const _$_DLSNotificationTaskLock(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskLock',
        super._();

  factory _$_DLSNotificationTaskLock.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskLockFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskLock(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskLock &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskLockCopyWith<_$_DLSNotificationTaskLock>
      get copyWith =>
          __$$_DLSNotificationTaskLockCopyWithImpl<_$_DLSNotificationTaskLock>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskLock(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskLock?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskLock != null) {
      return taskLock(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskLock(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskLock?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskLock != null) {
      return taskLock(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskLockToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskLock extends DLSNotification {
  const factory _DLSNotificationTaskLock(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskLock;
  const _DLSNotificationTaskLock._() : super._();

  factory _DLSNotificationTaskLock.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskLock.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskLockCopyWith<_$_DLSNotificationTaskLock>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskUnlockCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskUnlockCopyWith(
          _$_DLSNotificationTaskUnlock value,
          $Res Function(_$_DLSNotificationTaskUnlock) then) =
      __$$_DLSNotificationTaskUnlockCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationTaskUnlockCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskUnlock>
    implements _$$_DLSNotificationTaskUnlockCopyWith<$Res> {
  __$$_DLSNotificationTaskUnlockCopyWithImpl(
      _$_DLSNotificationTaskUnlock _value,
      $Res Function(_$_DLSNotificationTaskUnlock) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskUnlock(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskUnlock extends _DLSNotificationTaskUnlock {
  const _$_DLSNotificationTaskUnlock(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskUnlock',
        super._();

  factory _$_DLSNotificationTaskUnlock.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskUnlockFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskUnlock(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskUnlock &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskUnlockCopyWith<_$_DLSNotificationTaskUnlock>
      get copyWith => __$$_DLSNotificationTaskUnlockCopyWithImpl<
          _$_DLSNotificationTaskUnlock>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskUnlock(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskUnlock?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskUnlock != null) {
      return taskUnlock(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskUnlock(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskUnlock?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskUnlock != null) {
      return taskUnlock(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskUnlockToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskUnlock extends DLSNotification {
  const factory _DLSNotificationTaskUnlock(
          {required final DLSNotificationTask nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskUnlock;
  const _DLSNotificationTaskUnlock._() : super._();

  factory _DLSNotificationTaskUnlock.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskUnlock.fromJson;

  @override
  DLSNotificationTask get nObject;
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskUnlockCopyWith<_$_DLSNotificationTaskUnlock>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskCallStartCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskCallStartCopyWith(
          _$_DLSNotificationTaskCallStart value,
          $Res Function(_$_DLSNotificationTaskCallStart) then) =
      __$$_DLSNotificationTaskCallStartCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      DateTime startAt,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationTaskCallStartCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskCallStart>
    implements _$$_DLSNotificationTaskCallStartCopyWith<$Res> {
  __$$_DLSNotificationTaskCallStartCopyWithImpl(
      _$_DLSNotificationTaskCallStart _value,
      $Res Function(_$_DLSNotificationTaskCallStart) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? startAt = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskCallStart(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      startAt: null == startAt
          ? _value.startAt
          : startAt // ignore: cast_nullable_to_non_nullable
              as DateTime,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskCallStart extends _DLSNotificationTaskCallStart {
  const _$_DLSNotificationTaskCallStart(
      {required this.nObject,
      required this.startAt,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskCallStart',
        super._();

  factory _$_DLSNotificationTaskCallStart.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskCallStartFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final DateTime startAt;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskCallStart(nObject: $nObject, startAt: $startAt, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskCallStart &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.startAt, startAt) || other.startAt == startAt) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, startAt, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskCallStartCopyWith<_$_DLSNotificationTaskCallStart>
      get copyWith => __$$_DLSNotificationTaskCallStartCopyWithImpl<
          _$_DLSNotificationTaskCallStart>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskCallStart(nObject, startAt, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskCallStart?.call(nObject, startAt, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskCallStart != null) {
      return taskCallStart(nObject, startAt, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskCallStart(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskCallStart?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskCallStart != null) {
      return taskCallStart(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskCallStartToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskCallStart extends DLSNotification {
  const factory _DLSNotificationTaskCallStart(
          {required final DLSNotificationTask nObject,
          required final DateTime startAt,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskCallStart;
  const _DLSNotificationTaskCallStart._() : super._();

  factory _DLSNotificationTaskCallStart.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskCallStart.fromJson;

  @override
  DLSNotificationTask get nObject;
  DateTime get startAt;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskCallStartCopyWith<_$_DLSNotificationTaskCallStart>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskCallEndCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskCallEndCopyWith(
          _$_DLSNotificationTaskCallEnd value,
          $Res Function(_$_DLSNotificationTaskCallEnd) then) =
      __$$_DLSNotificationTaskCallEndCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      int duration,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationTaskCallEndCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskCallEnd>
    implements _$$_DLSNotificationTaskCallEndCopyWith<$Res> {
  __$$_DLSNotificationTaskCallEndCopyWithImpl(
      _$_DLSNotificationTaskCallEnd _value,
      $Res Function(_$_DLSNotificationTaskCallEnd) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? duration = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskCallEnd(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      duration: null == duration
          ? _value.duration
          : duration // ignore: cast_nullable_to_non_nullable
              as int,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskCallEnd extends _DLSNotificationTaskCallEnd {
  const _$_DLSNotificationTaskCallEnd(
      {required this.nObject,
      required this.duration,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskCallEnd',
        super._();

  factory _$_DLSNotificationTaskCallEnd.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskCallEndFromJson(json);

  @override
  final DLSNotificationTask nObject;

  /// продолжительность в секундах
  @override
  final int duration;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskCallEnd(nObject: $nObject, duration: $duration, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskCallEnd &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.duration, duration) ||
                other.duration == duration) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, duration, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskCallEndCopyWith<_$_DLSNotificationTaskCallEnd>
      get copyWith => __$$_DLSNotificationTaskCallEndCopyWithImpl<
          _$_DLSNotificationTaskCallEnd>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskCallEnd(nObject, duration, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskCallEnd?.call(nObject, duration, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskCallEnd != null) {
      return taskCallEnd(nObject, duration, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskCallEnd(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskCallEnd?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskCallEnd != null) {
      return taskCallEnd(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskCallEndToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskCallEnd extends DLSNotification {
  const factory _DLSNotificationTaskCallEnd(
          {required final DLSNotificationTask nObject,
          required final int duration,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskCallEnd;
  const _DLSNotificationTaskCallEnd._() : super._();

  factory _DLSNotificationTaskCallEnd.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskCallEnd.fromJson;

  @override
  DLSNotificationTask get nObject;

  /// продолжительность в секундах
  int get duration;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskCallEndCopyWith<_$_DLSNotificationTaskCallEnd>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskReminderCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskReminderCopyWith(
          _$_DLSNotificationTaskReminder value,
          $Res Function(_$_DLSNotificationTaskReminder) then) =
      __$$_DLSNotificationTaskReminderCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      String reminderText,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationTaskReminderCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskReminder>
    implements _$$_DLSNotificationTaskReminderCopyWith<$Res> {
  __$$_DLSNotificationTaskReminderCopyWithImpl(
      _$_DLSNotificationTaskReminder _value,
      $Res Function(_$_DLSNotificationTaskReminder) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? reminderText = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskReminder(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      reminderText: null == reminderText
          ? _value.reminderText
          : reminderText // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskReminder extends _DLSNotificationTaskReminder {
  const _$_DLSNotificationTaskReminder(
      {required this.nObject,
      required this.reminderText,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskReminder',
        super._();

  factory _$_DLSNotificationTaskReminder.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskReminderFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final String reminderText;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskReminder(nObject: $nObject, reminderText: $reminderText, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskReminder &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.reminderText, reminderText) ||
                other.reminderText == reminderText) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, reminderText, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskReminderCopyWith<_$_DLSNotificationTaskReminder>
      get copyWith => __$$_DLSNotificationTaskReminderCopyWithImpl<
          _$_DLSNotificationTaskReminder>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskReminder(nObject, reminderText, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskReminder?.call(nObject, reminderText, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskReminder != null) {
      return taskReminder(nObject, reminderText, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskReminder(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskReminder?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskReminder != null) {
      return taskReminder(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskReminderToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskReminder extends DLSNotification {
  const factory _DLSNotificationTaskReminder(
          {required final DLSNotificationTask nObject,
          required final String reminderText,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskReminder;
  const _DLSNotificationTaskReminder._() : super._();

  factory _DLSNotificationTaskReminder.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskReminder.fromJson;

  @override
  DLSNotificationTask get nObject;
  String get reminderText;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskReminderCopyWith<_$_DLSNotificationTaskReminder>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskOverdueCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskOverdueCopyWith(
          _$_DLSNotificationTaskOverdue value,
          $Res Function(_$_DLSNotificationTaskOverdue) then) =
      __$$_DLSNotificationTaskOverdueCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      String overdueText,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationTaskOverdueCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationTaskOverdue>
    implements _$$_DLSNotificationTaskOverdueCopyWith<$Res> {
  __$$_DLSNotificationTaskOverdueCopyWithImpl(
      _$_DLSNotificationTaskOverdue _value,
      $Res Function(_$_DLSNotificationTaskOverdue) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? overdueText = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskOverdue(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      overdueText: null == overdueText
          ? _value.overdueText
          : overdueText // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskOverdue extends _DLSNotificationTaskOverdue {
  const _$_DLSNotificationTaskOverdue(
      {required this.nObject,
      required this.overdueText,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskOverdue',
        super._();

  factory _$_DLSNotificationTaskOverdue.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskOverdueFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final String overdueText;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskOverdue(nObject: $nObject, overdueText: $overdueText, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskOverdue &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.overdueText, overdueText) ||
                other.overdueText == overdueText) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, overdueText, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskOverdueCopyWith<_$_DLSNotificationTaskOverdue>
      get copyWith => __$$_DLSNotificationTaskOverdueCopyWithImpl<
          _$_DLSNotificationTaskOverdue>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskOverdue(nObject, overdueText, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskOverdue?.call(nObject, overdueText, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskOverdue != null) {
      return taskOverdue(nObject, overdueText, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskOverdue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskOverdue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskOverdue != null) {
      return taskOverdue(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskOverdueToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskOverdue extends DLSNotification {
  const factory _DLSNotificationTaskOverdue(
          {required final DLSNotificationTask nObject,
          required final String overdueText,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskOverdue;
  const _DLSNotificationTaskOverdue._() : super._();

  factory _DLSNotificationTaskOverdue.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskOverdue.fromJson;

  @override
  DLSNotificationTask get nObject;
  String get overdueText;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskOverdueCopyWith<_$_DLSNotificationTaskOverdue>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationTaskInformationCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationTaskInformationCopyWith(
          _$_DLSNotificationTaskInformation value,
          $Res Function(_$_DLSNotificationTaskInformation) then) =
      __$$_DLSNotificationTaskInformationCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationTask nObject,
      String information,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationTaskCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationTaskInformationCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationTaskInformation>
    implements _$$_DLSNotificationTaskInformationCopyWith<$Res> {
  __$$_DLSNotificationTaskInformationCopyWithImpl(
      _$_DLSNotificationTaskInformation _value,
      $Res Function(_$_DLSNotificationTaskInformation) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? information = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationTaskInformation(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      information: null == information
          ? _value.information
          : information // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get nObject {
    return $DLSNotificationTaskCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationTaskInformation
    extends _DLSNotificationTaskInformation {
  const _$_DLSNotificationTaskInformation(
      {required this.nObject,
      required this.information,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'taskInformation',
        super._();

  factory _$_DLSNotificationTaskInformation.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationTaskInformationFromJson(json);

  @override
  final DLSNotificationTask nObject;
  @override
  final String information;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.taskInformation(nObject: $nObject, information: $information, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationTaskInformation &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.information, information) ||
                other.information == information) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, information, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationTaskInformationCopyWith<_$_DLSNotificationTaskInformation>
      get copyWith => __$$_DLSNotificationTaskInformationCopyWithImpl<
          _$_DLSNotificationTaskInformation>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return taskInformation(nObject, information, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return taskInformation?.call(nObject, information, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskInformation != null) {
      return taskInformation(nObject, information, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return taskInformation(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return taskInformation?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (taskInformation != null) {
      return taskInformation(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationTaskInformationToJson(
      this,
    );
  }
}

abstract class _DLSNotificationTaskInformation extends DLSNotification {
  const factory _DLSNotificationTaskInformation(
          {required final DLSNotificationTask nObject,
          required final String information,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationTaskInformation;
  const _DLSNotificationTaskInformation._() : super._();

  factory _DLSNotificationTaskInformation.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationTaskInformation.fromJson;

  @override
  DLSNotificationTask get nObject;
  String get information;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationTaskInformationCopyWith<_$_DLSNotificationTaskInformation>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventAnyStringCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventAnyStringCopyWith(
          _$_DLSNotificationEventAnyString value,
          $Res Function(_$_DLSNotificationEventAnyString) then) =
      __$$_DLSNotificationEventAnyStringCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      String text1,
      String text2,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventAnyStringCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventAnyString>
    implements _$$_DLSNotificationEventAnyStringCopyWith<$Res> {
  __$$_DLSNotificationEventAnyStringCopyWithImpl(
      _$_DLSNotificationEventAnyString _value,
      $Res Function(_$_DLSNotificationEventAnyString) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? text1 = null,
    Object? text2 = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventAnyString(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      text1: null == text1
          ? _value.text1
          : text1 // ignore: cast_nullable_to_non_nullable
              as String,
      text2: null == text2
          ? _value.text2
          : text2 // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventAnyString extends _DLSNotificationEventAnyString {
  const _$_DLSNotificationEventAnyString(
      {required this.nObject,
      required this.user,
      required this.text1,
      required this.text2,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventChangeAnyString',
        super._();

  factory _$_DLSNotificationEventAnyString.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventAnyStringFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;
  @override
  final DLSNotificationUser user;

  /// текст без выделения
  /// например: добавили 12 файлов к мероприятию
  @override
  final String text1;

  /// текст с выделением
  /// например: Планирование планов
  @override
  final String text2;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventChangeAnyString(nObject: $nObject, user: $user, text1: $text1, text2: $text2, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventAnyString &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.text1, text1) || other.text1 == text1) &&
            (identical(other.text2, text2) || other.text2 == text2) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, text1, text2, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventAnyStringCopyWith<_$_DLSNotificationEventAnyString>
      get copyWith => __$$_DLSNotificationEventAnyStringCopyWithImpl<
          _$_DLSNotificationEventAnyString>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventChangeAnyString(nObject, user, text1, text2, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventChangeAnyString?.call(nObject, user, text1, text2, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangeAnyString != null) {
      return eventChangeAnyString(nObject, user, text1, text2, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventChangeAnyString(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventChangeAnyString?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangeAnyString != null) {
      return eventChangeAnyString(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventAnyStringToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventAnyString extends DLSNotification {
  const factory _DLSNotificationEventAnyString(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          required final String text1,
          required final String text2,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventAnyString;
  const _DLSNotificationEventAnyString._() : super._();

  factory _DLSNotificationEventAnyString.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventAnyString.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;
  DLSNotificationUser get user;

  /// текст без выделения
  /// например: добавили 12 файлов к мероприятию
  String get text1;

  /// текст с выделением
  /// например: Планирование планов
  String get text2;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventAnyStringCopyWith<_$_DLSNotificationEventAnyString>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventInviteCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventInviteCopyWith(
          _$_DLSNotificationEventInvite value,
          $Res Function(_$_DLSNotificationEventInvite) then) =
      __$$_DLSNotificationEventInviteCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventInviteCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationEventInvite>
    implements _$$_DLSNotificationEventInviteCopyWith<$Res> {
  __$$_DLSNotificationEventInviteCopyWithImpl(
      _$_DLSNotificationEventInvite _value,
      $Res Function(_$_DLSNotificationEventInvite) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventInvite(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventInvite extends _DLSNotificationEventInvite {
  const _$_DLSNotificationEventInvite(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventInvite',
        super._();

  factory _$_DLSNotificationEventInvite.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationEventInviteFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventInvite(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventInvite &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventInviteCopyWith<_$_DLSNotificationEventInvite>
      get copyWith => __$$_DLSNotificationEventInviteCopyWithImpl<
          _$_DLSNotificationEventInvite>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventInvite(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventInvite?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventInvite != null) {
      return eventInvite(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventInvite(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventInvite?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventInvite != null) {
      return eventInvite(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventInviteToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventInvite extends DLSNotification {
  const factory _DLSNotificationEventInvite(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventInvite;
  const _DLSNotificationEventInvite._() : super._();

  factory _DLSNotificationEventInvite.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventInvite.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventInviteCopyWith<_$_DLSNotificationEventInvite>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventRemoveCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventRemoveCopyWith(
          _$_DLSNotificationEventRemove value,
          $Res Function(_$_DLSNotificationEventRemove) then) =
      __$$_DLSNotificationEventRemoveCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventRemoveCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationEventRemove>
    implements _$$_DLSNotificationEventRemoveCopyWith<$Res> {
  __$$_DLSNotificationEventRemoveCopyWithImpl(
      _$_DLSNotificationEventRemove _value,
      $Res Function(_$_DLSNotificationEventRemove) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventRemove(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventRemove extends _DLSNotificationEventRemove {
  const _$_DLSNotificationEventRemove(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventRemove',
        super._();

  factory _$_DLSNotificationEventRemove.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationEventRemoveFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventRemove(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventRemove &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventRemoveCopyWith<_$_DLSNotificationEventRemove>
      get copyWith => __$$_DLSNotificationEventRemoveCopyWithImpl<
          _$_DLSNotificationEventRemove>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventRemove(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventRemove?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventRemove != null) {
      return eventRemove(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventRemove(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventRemove?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventRemove != null) {
      return eventRemove(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventRemoveToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventRemove extends DLSNotification {
  const factory _DLSNotificationEventRemove(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventRemove;
  const _DLSNotificationEventRemove._() : super._();

  factory _DLSNotificationEventRemove.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventRemove.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventRemoveCopyWith<_$_DLSNotificationEventRemove>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventChangeDateCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventChangeDateCopyWith(
          _$_DLSNotificationEventChangeDate value,
          $Res Function(_$_DLSNotificationEventChangeDate) then) =
      __$$_DLSNotificationEventChangeDateCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      DateTime datetimePrev,
      DateTime datetimeCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventChangeDateCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventChangeDate>
    implements _$$_DLSNotificationEventChangeDateCopyWith<$Res> {
  __$$_DLSNotificationEventChangeDateCopyWithImpl(
      _$_DLSNotificationEventChangeDate _value,
      $Res Function(_$_DLSNotificationEventChangeDate) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? datetimePrev = null,
    Object? datetimeCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventChangeDate(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      datetimePrev: null == datetimePrev
          ? _value.datetimePrev
          : datetimePrev // ignore: cast_nullable_to_non_nullable
              as DateTime,
      datetimeCur: null == datetimeCur
          ? _value.datetimeCur
          : datetimeCur // ignore: cast_nullable_to_non_nullable
              as DateTime,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventChangeDate
    extends _DLSNotificationEventChangeDate {
  const _$_DLSNotificationEventChangeDate(
      {required this.nObject,
      required this.user,
      required this.datetimePrev,
      required this.datetimeCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventChangeDate',
        super._();

  factory _$_DLSNotificationEventChangeDate.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventChangeDateFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  @override
  final DateTime datetimePrev;
  @override
  final DateTime datetimeCur;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventChangeDate(nObject: $nObject, user: $user, datetimePrev: $datetimePrev, datetimeCur: $datetimeCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventChangeDate &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.datetimePrev, datetimePrev) ||
                other.datetimePrev == datetimePrev) &&
            (identical(other.datetimeCur, datetimeCur) ||
                other.datetimeCur == datetimeCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType, nObject, user, datetimePrev, datetimeCur, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventChangeDateCopyWith<_$_DLSNotificationEventChangeDate>
      get copyWith => __$$_DLSNotificationEventChangeDateCopyWithImpl<
          _$_DLSNotificationEventChangeDate>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventChangeDate(nObject, user, datetimePrev, datetimeCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventChangeDate?.call(
        nObject, user, datetimePrev, datetimeCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangeDate != null) {
      return eventChangeDate(
          nObject, user, datetimePrev, datetimeCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventChangeDate(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventChangeDate?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangeDate != null) {
      return eventChangeDate(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventChangeDateToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventChangeDate extends DLSNotification {
  const factory _DLSNotificationEventChangeDate(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          required final DateTime datetimePrev,
          required final DateTime datetimeCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventChangeDate;
  const _DLSNotificationEventChangeDate._() : super._();

  factory _DLSNotificationEventChangeDate.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventChangeDate.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  DateTime get datetimePrev;
  DateTime get datetimeCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventChangeDateCopyWith<_$_DLSNotificationEventChangeDate>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventChangeTimeCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventChangeTimeCopyWith(
          _$_DLSNotificationEventChangeTime value,
          $Res Function(_$_DLSNotificationEventChangeTime) then) =
      __$$_DLSNotificationEventChangeTimeCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      List<DateTime> timePrev,
      List<DateTime> timeCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventChangeTimeCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventChangeTime>
    implements _$$_DLSNotificationEventChangeTimeCopyWith<$Res> {
  __$$_DLSNotificationEventChangeTimeCopyWithImpl(
      _$_DLSNotificationEventChangeTime _value,
      $Res Function(_$_DLSNotificationEventChangeTime) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? timePrev = null,
    Object? timeCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventChangeTime(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      timePrev: null == timePrev
          ? _value._timePrev
          : timePrev // ignore: cast_nullable_to_non_nullable
              as List<DateTime>,
      timeCur: null == timeCur
          ? _value._timeCur
          : timeCur // ignore: cast_nullable_to_non_nullable
              as List<DateTime>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventChangeTime
    extends _DLSNotificationEventChangeTime {
  const _$_DLSNotificationEventChangeTime(
      {required this.nObject,
      required this.user,
      required final List<DateTime> timePrev,
      required final List<DateTime> timeCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _timePrev = timePrev,
        _timeCur = timeCur,
        $type = $type ?? 'eventChangeTime',
        super._();

  factory _$_DLSNotificationEventChangeTime.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventChangeTimeFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  final List<DateTime> _timePrev;
  @override
  List<DateTime> get timePrev {
    if (_timePrev is EqualUnmodifiableListView) return _timePrev;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_timePrev);
  }

  final List<DateTime> _timeCur;
  @override
  List<DateTime> get timeCur {
    if (_timeCur is EqualUnmodifiableListView) return _timeCur;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_timeCur);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventChangeTime(nObject: $nObject, user: $user, timePrev: $timePrev, timeCur: $timeCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventChangeTime &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._timePrev, _timePrev) &&
            const DeepCollectionEquality().equals(other._timeCur, _timeCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(
      runtimeType,
      nObject,
      user,
      const DeepCollectionEquality().hash(_timePrev),
      const DeepCollectionEquality().hash(_timeCur),
      platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventChangeTimeCopyWith<_$_DLSNotificationEventChangeTime>
      get copyWith => __$$_DLSNotificationEventChangeTimeCopyWithImpl<
          _$_DLSNotificationEventChangeTime>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventChangeTime(nObject, user, timePrev, timeCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventChangeTime?.call(nObject, user, timePrev, timeCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangeTime != null) {
      return eventChangeTime(nObject, user, timePrev, timeCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventChangeTime(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventChangeTime?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangeTime != null) {
      return eventChangeTime(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventChangeTimeToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventChangeTime extends DLSNotification {
  const factory _DLSNotificationEventChangeTime(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          required final List<DateTime> timePrev,
          required final List<DateTime> timeCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventChangeTime;
  const _DLSNotificationEventChangeTime._() : super._();

  factory _DLSNotificationEventChangeTime.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventChangeTime.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  List<DateTime> get timePrev;
  List<DateTime> get timeCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventChangeTimeCopyWith<_$_DLSNotificationEventChangeTime>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventChangeFormatCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventChangeFormatCopyWith(
          _$_DLSNotificationEventChangeFormat value,
          $Res Function(_$_DLSNotificationEventChangeFormat) then) =
      __$$_DLSNotificationEventChangeFormatCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      DLSNotificationEventFormat formatPrev,
      DLSNotificationEventFormat formatCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventChangeFormatCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventChangeFormat>
    implements _$$_DLSNotificationEventChangeFormatCopyWith<$Res> {
  __$$_DLSNotificationEventChangeFormatCopyWithImpl(
      _$_DLSNotificationEventChangeFormat _value,
      $Res Function(_$_DLSNotificationEventChangeFormat) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? formatPrev = null,
    Object? formatCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventChangeFormat(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      formatPrev: null == formatPrev
          ? _value.formatPrev
          : formatPrev // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEventFormat,
      formatCur: null == formatCur
          ? _value.formatCur
          : formatCur // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEventFormat,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventChangeFormat
    extends _DLSNotificationEventChangeFormat {
  const _$_DLSNotificationEventChangeFormat(
      {required this.nObject,
      required this.user,
      required this.formatPrev,
      required this.formatCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventChangeFormat',
        super._();

  factory _$_DLSNotificationEventChangeFormat.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventChangeFormatFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  @override
  final DLSNotificationEventFormat formatPrev;
  @override
  final DLSNotificationEventFormat formatCur;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventChangeFormat(nObject: $nObject, user: $user, formatPrev: $formatPrev, formatCur: $formatCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventChangeFormat &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.formatPrev, formatPrev) ||
                other.formatPrev == formatPrev) &&
            (identical(other.formatCur, formatCur) ||
                other.formatCur == formatCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, formatPrev, formatCur, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventChangeFormatCopyWith<
          _$_DLSNotificationEventChangeFormat>
      get copyWith => __$$_DLSNotificationEventChangeFormatCopyWithImpl<
          _$_DLSNotificationEventChangeFormat>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventChangeFormat(nObject, user, formatPrev, formatCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventChangeFormat?.call(
        nObject, user, formatPrev, formatCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangeFormat != null) {
      return eventChangeFormat(nObject, user, formatPrev, formatCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventChangeFormat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventChangeFormat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangeFormat != null) {
      return eventChangeFormat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventChangeFormatToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventChangeFormat extends DLSNotification {
  const factory _DLSNotificationEventChangeFormat(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          required final DLSNotificationEventFormat formatPrev,
          required final DLSNotificationEventFormat formatCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventChangeFormat;
  const _DLSNotificationEventChangeFormat._() : super._();

  factory _DLSNotificationEventChangeFormat.fromJson(
      Map<String, dynamic> json) = _$_DLSNotificationEventChangeFormat.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  DLSNotificationEventFormat get formatPrev;
  DLSNotificationEventFormat get formatCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventChangeFormatCopyWith<
          _$_DLSNotificationEventChangeFormat>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventChangePlaceCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventChangePlaceCopyWith(
          _$_DLSNotificationEventChangePlace value,
          $Res Function(_$_DLSNotificationEventChangePlace) then) =
      __$$_DLSNotificationEventChangePlaceCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      String placePrev,
      String placeCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventChangePlaceCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventChangePlace>
    implements _$$_DLSNotificationEventChangePlaceCopyWith<$Res> {
  __$$_DLSNotificationEventChangePlaceCopyWithImpl(
      _$_DLSNotificationEventChangePlace _value,
      $Res Function(_$_DLSNotificationEventChangePlace) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? placePrev = null,
    Object? placeCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventChangePlace(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      placePrev: null == placePrev
          ? _value.placePrev
          : placePrev // ignore: cast_nullable_to_non_nullable
              as String,
      placeCur: null == placeCur
          ? _value.placeCur
          : placeCur // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventChangePlace
    extends _DLSNotificationEventChangePlace {
  const _$_DLSNotificationEventChangePlace(
      {required this.nObject,
      required this.user,
      required this.placePrev,
      required this.placeCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventChangePlace',
        super._();

  factory _$_DLSNotificationEventChangePlace.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventChangePlaceFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  @override
  final String placePrev;
  @override
  final String placeCur;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventChangePlace(nObject: $nObject, user: $user, placePrev: $placePrev, placeCur: $placeCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventChangePlace &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.placePrev, placePrev) ||
                other.placePrev == placePrev) &&
            (identical(other.placeCur, placeCur) ||
                other.placeCur == placeCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, placePrev, placeCur, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventChangePlaceCopyWith<
          _$_DLSNotificationEventChangePlace>
      get copyWith => __$$_DLSNotificationEventChangePlaceCopyWithImpl<
          _$_DLSNotificationEventChangePlace>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventChangePlace(nObject, user, placePrev, placeCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventChangePlace?.call(nObject, user, placePrev, placeCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangePlace != null) {
      return eventChangePlace(nObject, user, placePrev, placeCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventChangePlace(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventChangePlace?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventChangePlace != null) {
      return eventChangePlace(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventChangePlaceToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventChangePlace extends DLSNotification {
  const factory _DLSNotificationEventChangePlace(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          required final String placePrev,
          required final String placeCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventChangePlace;
  const _DLSNotificationEventChangePlace._() : super._();

  factory _DLSNotificationEventChangePlace.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventChangePlace.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  String get placePrev;
  String get placeCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventChangePlaceCopyWith<
          _$_DLSNotificationEventChangePlace>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventAddFilesCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventAddFilesCopyWith(
          _$_DLSNotificationEventAddFiles value,
          $Res Function(_$_DLSNotificationEventAddFiles) then) =
      __$$_DLSNotificationEventAddFilesCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      List<dynamic> files,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventAddFilesCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationEventAddFiles>
    implements _$$_DLSNotificationEventAddFilesCopyWith<$Res> {
  __$$_DLSNotificationEventAddFilesCopyWithImpl(
      _$_DLSNotificationEventAddFiles _value,
      $Res Function(_$_DLSNotificationEventAddFiles) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? files = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventAddFiles(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      files: null == files
          ? _value._files
          : files // ignore: cast_nullable_to_non_nullable
              as List<dynamic>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventAddFiles extends _DLSNotificationEventAddFiles {
  const _$_DLSNotificationEventAddFiles(
      {required this.nObject,
      required this.user,
      required final List<dynamic> files,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _files = files,
        $type = $type ?? 'eventAddFiles',
        super._();

  factory _$_DLSNotificationEventAddFiles.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationEventAddFilesFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  final List<dynamic> _files;
  @override
  List<dynamic> get files {
    if (_files is EqualUnmodifiableListView) return _files;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_files);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventAddFiles(nObject: $nObject, user: $user, files: $files, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventAddFiles &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._files, _files) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_files), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventAddFilesCopyWith<_$_DLSNotificationEventAddFiles>
      get copyWith => __$$_DLSNotificationEventAddFilesCopyWithImpl<
          _$_DLSNotificationEventAddFiles>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventAddFiles(nObject, user, files, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventAddFiles?.call(nObject, user, files, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventAddFiles != null) {
      return eventAddFiles(nObject, user, files, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventAddFiles(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventAddFiles?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventAddFiles != null) {
      return eventAddFiles(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventAddFilesToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventAddFiles extends DLSNotification {
  const factory _DLSNotificationEventAddFiles(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          required final List<dynamic> files,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventAddFiles;
  const _DLSNotificationEventAddFiles._() : super._();

  factory _DLSNotificationEventAddFiles.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventAddFiles.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  List<dynamic> get files;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventAddFilesCopyWith<_$_DLSNotificationEventAddFiles>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventRemoveFilesCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventRemoveFilesCopyWith(
          _$_DLSNotificationEventRemoveFiles value,
          $Res Function(_$_DLSNotificationEventRemoveFiles) then) =
      __$$_DLSNotificationEventRemoveFilesCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      List<dynamic> files,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventRemoveFilesCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventRemoveFiles>
    implements _$$_DLSNotificationEventRemoveFilesCopyWith<$Res> {
  __$$_DLSNotificationEventRemoveFilesCopyWithImpl(
      _$_DLSNotificationEventRemoveFiles _value,
      $Res Function(_$_DLSNotificationEventRemoveFiles) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? files = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventRemoveFiles(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      files: null == files
          ? _value._files
          : files // ignore: cast_nullable_to_non_nullable
              as List<dynamic>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventRemoveFiles
    extends _DLSNotificationEventRemoveFiles {
  const _$_DLSNotificationEventRemoveFiles(
      {required this.nObject,
      required this.user,
      required final List<dynamic> files,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _files = files,
        $type = $type ?? 'eventRemoveFiles',
        super._();

  factory _$_DLSNotificationEventRemoveFiles.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventRemoveFilesFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  final List<dynamic> _files;
  @override
  List<dynamic> get files {
    if (_files is EqualUnmodifiableListView) return _files;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_files);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventRemoveFiles(nObject: $nObject, user: $user, files: $files, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventRemoveFiles &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._files, _files) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_files), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventRemoveFilesCopyWith<
          _$_DLSNotificationEventRemoveFiles>
      get copyWith => __$$_DLSNotificationEventRemoveFilesCopyWithImpl<
          _$_DLSNotificationEventRemoveFiles>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventRemoveFiles(nObject, user, files, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventRemoveFiles?.call(nObject, user, files, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventRemoveFiles != null) {
      return eventRemoveFiles(nObject, user, files, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventRemoveFiles(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventRemoveFiles?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventRemoveFiles != null) {
      return eventRemoveFiles(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventRemoveFilesToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventRemoveFiles extends DLSNotification {
  const factory _DLSNotificationEventRemoveFiles(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          required final List<dynamic> files,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventRemoveFiles;
  const _DLSNotificationEventRemoveFiles._() : super._();

  factory _DLSNotificationEventRemoveFiles.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventRemoveFiles.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  List<dynamic> get files;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventRemoveFilesCopyWith<
          _$_DLSNotificationEventRemoveFiles>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventRestrictAccessCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventRestrictAccessCopyWith(
          _$_DLSNotificationEventRestrictAccess value,
          $Res Function(_$_DLSNotificationEventRestrictAccess) then) =
      __$$_DLSNotificationEventRestrictAccessCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventRestrictAccessCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventRestrictAccess>
    implements _$$_DLSNotificationEventRestrictAccessCopyWith<$Res> {
  __$$_DLSNotificationEventRestrictAccessCopyWithImpl(
      _$_DLSNotificationEventRestrictAccess _value,
      $Res Function(_$_DLSNotificationEventRestrictAccess) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventRestrictAccess(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventRestrictAccess
    extends _DLSNotificationEventRestrictAccess {
  const _$_DLSNotificationEventRestrictAccess(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventRestrictAccess',
        super._();

  factory _$_DLSNotificationEventRestrictAccess.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventRestrictAccessFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventRestrictAccess(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventRestrictAccess &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventRestrictAccessCopyWith<
          _$_DLSNotificationEventRestrictAccess>
      get copyWith => __$$_DLSNotificationEventRestrictAccessCopyWithImpl<
          _$_DLSNotificationEventRestrictAccess>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventRestrictAccess(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventRestrictAccess?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventRestrictAccess != null) {
      return eventRestrictAccess(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventRestrictAccess(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventRestrictAccess?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventRestrictAccess != null) {
      return eventRestrictAccess(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventRestrictAccessToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventRestrictAccess extends DLSNotification {
  const factory _DLSNotificationEventRestrictAccess(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventRestrictAccess;
  const _DLSNotificationEventRestrictAccess._() : super._();

  factory _DLSNotificationEventRestrictAccess.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationEventRestrictAccess.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventRestrictAccessCopyWith<
          _$_DLSNotificationEventRestrictAccess>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventExpandAccessCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventExpandAccessCopyWith(
          _$_DLSNotificationEventExpandAccess value,
          $Res Function(_$_DLSNotificationEventExpandAccess) then) =
      __$$_DLSNotificationEventExpandAccessCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      DLSNotificationUser user,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationEventExpandAccessCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventExpandAccess>
    implements _$$_DLSNotificationEventExpandAccessCopyWith<$Res> {
  __$$_DLSNotificationEventExpandAccessCopyWithImpl(
      _$_DLSNotificationEventExpandAccess _value,
      $Res Function(_$_DLSNotificationEventExpandAccess) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventExpandAccess(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventExpandAccess
    extends _DLSNotificationEventExpandAccess {
  const _$_DLSNotificationEventExpandAccess(
      {required this.nObject,
      required this.user,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventExpandAccess',
        super._();

  factory _$_DLSNotificationEventExpandAccess.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventExpandAccessFromJson(json);

  /// мероприятие
  @override
  final DLSNotificationEvent nObject;

  /// пользователь
  @override
  final DLSNotificationUser user;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventExpandAccess(nObject: $nObject, user: $user, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventExpandAccess &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventExpandAccessCopyWith<
          _$_DLSNotificationEventExpandAccess>
      get copyWith => __$$_DLSNotificationEventExpandAccessCopyWithImpl<
          _$_DLSNotificationEventExpandAccess>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventExpandAccess(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventExpandAccess?.call(nObject, user, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventExpandAccess != null) {
      return eventExpandAccess(nObject, user, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventExpandAccess(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventExpandAccess?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventExpandAccess != null) {
      return eventExpandAccess(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventExpandAccessToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventExpandAccess extends DLSNotification {
  const factory _DLSNotificationEventExpandAccess(
          {required final DLSNotificationEvent nObject,
          required final DLSNotificationUser user,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventExpandAccess;
  const _DLSNotificationEventExpandAccess._() : super._();

  factory _DLSNotificationEventExpandAccess.fromJson(
      Map<String, dynamic> json) = _$_DLSNotificationEventExpandAccess.fromJson;

  @override

  /// мероприятие
  DLSNotificationEvent get nObject;

  /// пользователь
  DLSNotificationUser get user;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventExpandAccessCopyWith<
          _$_DLSNotificationEventExpandAccess>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventStartCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventStartCopyWith(
          _$_DLSNotificationEventStart value,
          $Res Function(_$_DLSNotificationEventStart) then) =
      __$$_DLSNotificationEventStartCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationEventStartCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationEventStart>
    implements _$$_DLSNotificationEventStartCopyWith<$Res> {
  __$$_DLSNotificationEventStartCopyWithImpl(
      _$_DLSNotificationEventStart _value,
      $Res Function(_$_DLSNotificationEventStart) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? users = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventStart(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventStart extends _DLSNotificationEventStart {
  const _$_DLSNotificationEventStart(
      {required this.nObject,
      required final List<DLSNotificationUser> users,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'eventStart',
        super._();

  factory _$_DLSNotificationEventStart.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationEventStartFromJson(json);

  @override
  final DLSNotificationEvent nObject;
  final List<DLSNotificationUser> _users;
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventStart(nObject: $nObject, users: $users, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventStart &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject,
      const DeepCollectionEquality().hash(_users), platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventStartCopyWith<_$_DLSNotificationEventStart>
      get copyWith => __$$_DLSNotificationEventStartCopyWithImpl<
          _$_DLSNotificationEventStart>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventStart(nObject, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventStart?.call(nObject, users, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventStart != null) {
      return eventStart(nObject, users, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventStart(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventStart?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventStart != null) {
      return eventStart(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventStartToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventStart extends DLSNotification {
  const factory _DLSNotificationEventStart(
          {required final DLSNotificationEvent nObject,
          required final List<DLSNotificationUser> users,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventStart;
  const _DLSNotificationEventStart._() : super._();

  factory _DLSNotificationEventStart.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventStart.fromJson;

  @override
  DLSNotificationEvent get nObject;
  List<DLSNotificationUser> get users;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventStartCopyWith<_$_DLSNotificationEventStart>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventEndCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventEndCopyWith(_$_DLSNotificationEventEnd value,
          $Res Function(_$_DLSNotificationEventEnd) then) =
      __$$_DLSNotificationEventEndCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationEventEndCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationEventEnd>
    implements _$$_DLSNotificationEventEndCopyWith<$Res> {
  __$$_DLSNotificationEventEndCopyWithImpl(_$_DLSNotificationEventEnd _value,
      $Res Function(_$_DLSNotificationEventEnd) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventEnd(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventEnd extends _DLSNotificationEventEnd {
  const _$_DLSNotificationEventEnd(
      {required this.nObject,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventEnd',
        super._();

  factory _$_DLSNotificationEventEnd.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationEventEndFromJson(json);

  @override
  final DLSNotificationEvent nObject;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventEnd(nObject: $nObject, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventEnd &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventEndCopyWith<_$_DLSNotificationEventEnd>
      get copyWith =>
          __$$_DLSNotificationEventEndCopyWithImpl<_$_DLSNotificationEventEnd>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventEnd(nObject, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventEnd?.call(nObject, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventEnd != null) {
      return eventEnd(nObject, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventEnd(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventEnd?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventEnd != null) {
      return eventEnd(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventEndToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventEnd extends DLSNotification {
  const factory _DLSNotificationEventEnd(
          {required final DLSNotificationEvent nObject,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventEnd;
  const _DLSNotificationEventEnd._() : super._();

  factory _DLSNotificationEventEnd.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventEnd.fromJson;

  @override
  DLSNotificationEvent get nObject;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventEndCopyWith<_$_DLSNotificationEventEnd>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventCallStartCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventCallStartCopyWith(
          _$_DLSNotificationEventCallStart value,
          $Res Function(_$_DLSNotificationEventCallStart) then) =
      __$$_DLSNotificationEventCallStartCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      List<DLSNotificationUser> users,
      DateTime startAt,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationEventCallStartCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventCallStart>
    implements _$$_DLSNotificationEventCallStartCopyWith<$Res> {
  __$$_DLSNotificationEventCallStartCopyWithImpl(
      _$_DLSNotificationEventCallStart _value,
      $Res Function(_$_DLSNotificationEventCallStart) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? users = null,
    Object? startAt = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventCallStart(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      startAt: null == startAt
          ? _value.startAt
          : startAt // ignore: cast_nullable_to_non_nullable
              as DateTime,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventCallStart extends _DLSNotificationEventCallStart {
  const _$_DLSNotificationEventCallStart(
      {required this.nObject,
      required final List<DLSNotificationUser> users,
      required this.startAt,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'eventCallStart',
        super._();

  factory _$_DLSNotificationEventCallStart.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventCallStartFromJson(json);

  @override
  final DLSNotificationEvent nObject;
  final List<DLSNotificationUser> _users;
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  @override
  final DateTime startAt;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventCallStart(nObject: $nObject, users: $users, startAt: $startAt, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventCallStart &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.startAt, startAt) || other.startAt == startAt) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject,
      const DeepCollectionEquality().hash(_users), startAt, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventCallStartCopyWith<_$_DLSNotificationEventCallStart>
      get copyWith => __$$_DLSNotificationEventCallStartCopyWithImpl<
          _$_DLSNotificationEventCallStart>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventCallStart(nObject, users, startAt, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventCallStart?.call(nObject, users, startAt, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventCallStart != null) {
      return eventCallStart(nObject, users, startAt, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventCallStart(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventCallStart?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventCallStart != null) {
      return eventCallStart(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventCallStartToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventCallStart extends DLSNotification {
  const factory _DLSNotificationEventCallStart(
          {required final DLSNotificationEvent nObject,
          required final List<DLSNotificationUser> users,
          required final DateTime startAt,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventCallStart;
  const _DLSNotificationEventCallStart._() : super._();

  factory _DLSNotificationEventCallStart.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventCallStart.fromJson;

  @override
  DLSNotificationEvent get nObject;
  List<DLSNotificationUser> get users;
  DateTime get startAt;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventCallStartCopyWith<_$_DLSNotificationEventCallStart>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventCallEndCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventCallEndCopyWith(
          _$_DLSNotificationEventCallEnd value,
          $Res Function(_$_DLSNotificationEventCallEnd) then) =
      __$$_DLSNotificationEventCallEndCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      List<DLSNotificationUser> users,
      int duration,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationEventCallEndCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationEventCallEnd>
    implements _$$_DLSNotificationEventCallEndCopyWith<$Res> {
  __$$_DLSNotificationEventCallEndCopyWithImpl(
      _$_DLSNotificationEventCallEnd _value,
      $Res Function(_$_DLSNotificationEventCallEnd) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? users = null,
    Object? duration = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventCallEnd(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      duration: null == duration
          ? _value.duration
          : duration // ignore: cast_nullable_to_non_nullable
              as int,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventCallEnd extends _DLSNotificationEventCallEnd {
  const _$_DLSNotificationEventCallEnd(
      {required this.nObject,
      required final List<DLSNotificationUser> users,
      required this.duration,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'eventCallEnd',
        super._();

  factory _$_DLSNotificationEventCallEnd.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationEventCallEndFromJson(json);

  @override
  final DLSNotificationEvent nObject;
  final List<DLSNotificationUser> _users;
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  /// продолжительность в секундах
  @override
  final int duration;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventCallEnd(nObject: $nObject, users: $users, duration: $duration, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventCallEnd &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.duration, duration) ||
                other.duration == duration) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject,
      const DeepCollectionEquality().hash(_users), duration, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventCallEndCopyWith<_$_DLSNotificationEventCallEnd>
      get copyWith => __$$_DLSNotificationEventCallEndCopyWithImpl<
          _$_DLSNotificationEventCallEnd>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventCallEnd(nObject, users, duration, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventCallEnd?.call(nObject, users, duration, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventCallEnd != null) {
      return eventCallEnd(nObject, users, duration, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventCallEnd(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventCallEnd?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventCallEnd != null) {
      return eventCallEnd(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventCallEndToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventCallEnd extends DLSNotification {
  const factory _DLSNotificationEventCallEnd(
          {required final DLSNotificationEvent nObject,
          required final List<DLSNotificationUser> users,
          required final int duration,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventCallEnd;
  const _DLSNotificationEventCallEnd._() : super._();

  factory _DLSNotificationEventCallEnd.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventCallEnd.fromJson;

  @override
  DLSNotificationEvent get nObject;
  List<DLSNotificationUser> get users;

  /// продолжительность в секундах
  int get duration;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventCallEndCopyWith<_$_DLSNotificationEventCallEnd>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationEventInformationCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationEventInformationCopyWith(
          _$_DLSNotificationEventInformation value,
          $Res Function(_$_DLSNotificationEventInformation) then) =
      __$$_DLSNotificationEventInformationCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationEvent nObject,
      String information,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationEventCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationEventInformationCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationEventInformation>
    implements _$$_DLSNotificationEventInformationCopyWith<$Res> {
  __$$_DLSNotificationEventInformationCopyWithImpl(
      _$_DLSNotificationEventInformation _value,
      $Res Function(_$_DLSNotificationEventInformation) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? information = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationEventInformation(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      information: null == information
          ? _value.information
          : information // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get nObject {
    return $DLSNotificationEventCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationEventInformation
    extends _DLSNotificationEventInformation {
  const _$_DLSNotificationEventInformation(
      {required this.nObject,
      required this.information,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'eventInformation',
        super._();

  factory _$_DLSNotificationEventInformation.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationEventInformationFromJson(json);

  @override
  final DLSNotificationEvent nObject;
  @override
  final String information;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.eventInformation(nObject: $nObject, information: $information, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationEventInformation &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.information, information) ||
                other.information == information) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, information, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationEventInformationCopyWith<
          _$_DLSNotificationEventInformation>
      get copyWith => __$$_DLSNotificationEventInformationCopyWithImpl<
          _$_DLSNotificationEventInformation>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return eventInformation(nObject, information, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return eventInformation?.call(nObject, information, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventInformation != null) {
      return eventInformation(nObject, information, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return eventInformation(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return eventInformation?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (eventInformation != null) {
      return eventInformation(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationEventInformationToJson(
      this,
    );
  }
}

abstract class _DLSNotificationEventInformation extends DLSNotification {
  const factory _DLSNotificationEventInformation(
          {required final DLSNotificationEvent nObject,
          required final String information,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationEventInformation;
  const _DLSNotificationEventInformation._() : super._();

  factory _DLSNotificationEventInformation.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationEventInformation.fromJson;

  @override
  DLSNotificationEvent get nObject;
  String get information;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationEventInformationCopyWith<
          _$_DLSNotificationEventInformation>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatPrivateMessageCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatPrivateMessageCopyWith(
          _$_DLSNotificationChatPrivateMessage value,
          $Res Function(_$_DLSNotificationChatPrivateMessage) then) =
      __$$_DLSNotificationChatPrivateMessageCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      String message,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationChatPrivateMessageCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatPrivateMessage>
    implements _$$_DLSNotificationChatPrivateMessageCopyWith<$Res> {
  __$$_DLSNotificationChatPrivateMessageCopyWithImpl(
      _$_DLSNotificationChatPrivateMessage _value,
      $Res Function(_$_DLSNotificationChatPrivateMessage) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? message = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatPrivateMessage(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      message: null == message
          ? _value.message
          : message // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatPrivateMessage
    extends _DLSNotificationChatPrivateMessage {
  const _$_DLSNotificationChatPrivateMessage(
      {required this.nObject,
      required this.user,
      required this.message,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatPrivateMessage',
        super._();

  factory _$_DLSNotificationChatPrivateMessage.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatPrivateMessageFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;

  /// текст сообщения
  @override
  final String message;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatPrivateMessage(nObject: $nObject, user: $user, message: $message, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatPrivateMessage &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.message, message) || other.message == message) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, message, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatPrivateMessageCopyWith<
          _$_DLSNotificationChatPrivateMessage>
      get copyWith => __$$_DLSNotificationChatPrivateMessageCopyWithImpl<
          _$_DLSNotificationChatPrivateMessage>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatPrivateMessage(nObject, user, message, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatPrivateMessage?.call(nObject, user, message, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatPrivateMessage != null) {
      return chatPrivateMessage(nObject, user, message, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatPrivateMessage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatPrivateMessage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatPrivateMessage != null) {
      return chatPrivateMessage(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatPrivateMessageToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatPrivateMessage extends DLSNotification {
  const factory _DLSNotificationChatPrivateMessage(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final String message,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatPrivateMessage;
  const _DLSNotificationChatPrivateMessage._() : super._();

  factory _DLSNotificationChatPrivateMessage.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationChatPrivateMessage.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;

  /// текст сообщения
  String get message;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatPrivateMessageCopyWith<
          _$_DLSNotificationChatPrivateMessage>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatGroupMessageCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatGroupMessageCopyWith(
          _$_DLSNotificationChatGroupMessage value,
          $Res Function(_$_DLSNotificationChatGroupMessage) then) =
      __$$_DLSNotificationChatGroupMessageCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      String message,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationChatGroupMessageCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatGroupMessage>
    implements _$$_DLSNotificationChatGroupMessageCopyWith<$Res> {
  __$$_DLSNotificationChatGroupMessageCopyWithImpl(
      _$_DLSNotificationChatGroupMessage _value,
      $Res Function(_$_DLSNotificationChatGroupMessage) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? message = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatGroupMessage(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      message: null == message
          ? _value.message
          : message // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatGroupMessage
    extends _DLSNotificationChatGroupMessage {
  const _$_DLSNotificationChatGroupMessage(
      {required this.nObject,
      required this.user,
      required this.message,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatGroupMessage',
        super._();

  factory _$_DLSNotificationChatGroupMessage.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatGroupMessageFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;

  /// текст сообщения
  @override
  final String message;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatGroupMessage(nObject: $nObject, user: $user, message: $message, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatGroupMessage &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.message, message) || other.message == message) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, message, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatGroupMessageCopyWith<
          _$_DLSNotificationChatGroupMessage>
      get copyWith => __$$_DLSNotificationChatGroupMessageCopyWithImpl<
          _$_DLSNotificationChatGroupMessage>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatGroupMessage(nObject, user, message, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatGroupMessage?.call(nObject, user, message, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatGroupMessage != null) {
      return chatGroupMessage(nObject, user, message, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatGroupMessage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatGroupMessage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatGroupMessage != null) {
      return chatGroupMessage(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatGroupMessageToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatGroupMessage extends DLSNotification {
  const factory _DLSNotificationChatGroupMessage(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final String message,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatGroupMessage;
  const _DLSNotificationChatGroupMessage._() : super._();

  factory _DLSNotificationChatGroupMessage.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationChatGroupMessage.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;

  /// текст сообщения
  String get message;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatGroupMessageCopyWith<
          _$_DLSNotificationChatGroupMessage>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatCallStartCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatCallStartCopyWith(
          _$_DLSNotificationChatCallStart value,
          $Res Function(_$_DLSNotificationChatCallStart) then) =
      __$$_DLSNotificationChatCallStartCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationChatCallStartCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationChatCallStart>
    implements _$$_DLSNotificationChatCallStartCopyWith<$Res> {
  __$$_DLSNotificationChatCallStartCopyWithImpl(
      _$_DLSNotificationChatCallStart _value,
      $Res Function(_$_DLSNotificationChatCallStart) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatCallStart(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatCallStart extends _DLSNotificationChatCallStart {
  const _$_DLSNotificationChatCallStart(
      {required this.nObject,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatCallStart',
        super._();

  factory _$_DLSNotificationChatCallStart.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationChatCallStartFromJson(json);

  @override
  final DLSNotificationChat nObject;
// required List<DLSNotificationUser> users,
// required DateTime startAt,
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatCallStart(nObject: $nObject, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatCallStart &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatCallStartCopyWith<_$_DLSNotificationChatCallStart>
      get copyWith => __$$_DLSNotificationChatCallStartCopyWithImpl<
          _$_DLSNotificationChatCallStart>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatCallStart(nObject, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatCallStart?.call(nObject, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatCallStart != null) {
      return chatCallStart(nObject, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatCallStart(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatCallStart?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatCallStart != null) {
      return chatCallStart(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatCallStartToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatCallStart extends DLSNotification {
  const factory _DLSNotificationChatCallStart(
          {required final DLSNotificationChat nObject,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatCallStart;
  const _DLSNotificationChatCallStart._() : super._();

  factory _DLSNotificationChatCallStart.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationChatCallStart.fromJson;

  @override
  DLSNotificationChat get nObject;
  @override // required List<DLSNotificationUser> users,
// required DateTime startAt,
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatCallStartCopyWith<_$_DLSNotificationChatCallStart>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatCallEndCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatCallEndCopyWith(
          _$_DLSNotificationChatCallEnd value,
          $Res Function(_$_DLSNotificationChatCallEnd) then) =
      __$$_DLSNotificationChatCallEndCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      int duration,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
}

/// @nodoc
class __$$_DLSNotificationChatCallEndCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res, _$_DLSNotificationChatCallEnd>
    implements _$$_DLSNotificationChatCallEndCopyWith<$Res> {
  __$$_DLSNotificationChatCallEndCopyWithImpl(
      _$_DLSNotificationChatCallEnd _value,
      $Res Function(_$_DLSNotificationChatCallEnd) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? duration = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatCallEnd(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      duration: null == duration
          ? _value.duration
          : duration // ignore: cast_nullable_to_non_nullable
              as int,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatCallEnd extends _DLSNotificationChatCallEnd {
  const _$_DLSNotificationChatCallEnd(
      {required this.nObject,
      required this.duration,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatCallEnd',
        super._();

  factory _$_DLSNotificationChatCallEnd.fromJson(Map<String, dynamic> json) =>
      _$$_DLSNotificationChatCallEndFromJson(json);

  @override
  final DLSNotificationChat nObject;
// required List<DLSNotificationUser> users,
  /// продолжительность в секундах
  @override
  final int duration;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatCallEnd(nObject: $nObject, duration: $duration, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatCallEnd &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.duration, duration) ||
                other.duration == duration) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, duration, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatCallEndCopyWith<_$_DLSNotificationChatCallEnd>
      get copyWith => __$$_DLSNotificationChatCallEndCopyWithImpl<
          _$_DLSNotificationChatCallEnd>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatCallEnd(nObject, duration, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatCallEnd?.call(nObject, duration, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatCallEnd != null) {
      return chatCallEnd(nObject, duration, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatCallEnd(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatCallEnd?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatCallEnd != null) {
      return chatCallEnd(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatCallEndToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatCallEnd extends DLSNotification {
  const factory _DLSNotificationChatCallEnd(
          {required final DLSNotificationChat nObject,
          required final int duration,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatCallEnd;
  const _DLSNotificationChatCallEnd._() : super._();

  factory _DLSNotificationChatCallEnd.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationChatCallEnd.fromJson;

  @override
  DLSNotificationChat get nObject; // required List<DLSNotificationUser> users,
  /// продолжительность в секундах
  int get duration;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatCallEndCopyWith<_$_DLSNotificationChatCallEnd>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatReplyMessageCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatReplyMessageCopyWith(
          _$_DLSNotificationChatReplyMessage value,
          $Res Function(_$_DLSNotificationChatReplyMessage) then) =
      __$$_DLSNotificationChatReplyMessageCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      String message,
      String replyMessage,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationChatReplyMessageCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatReplyMessage>
    implements _$$_DLSNotificationChatReplyMessageCopyWith<$Res> {
  __$$_DLSNotificationChatReplyMessageCopyWithImpl(
      _$_DLSNotificationChatReplyMessage _value,
      $Res Function(_$_DLSNotificationChatReplyMessage) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? message = null,
    Object? replyMessage = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatReplyMessage(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      message: null == message
          ? _value.message
          : message // ignore: cast_nullable_to_non_nullable
              as String,
      replyMessage: null == replyMessage
          ? _value.replyMessage
          : replyMessage // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatReplyMessage
    extends _DLSNotificationChatReplyMessage {
  const _$_DLSNotificationChatReplyMessage(
      {required this.nObject,
      required this.user,
      required this.message,
      required this.replyMessage,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatReplyMessage',
        super._();

  factory _$_DLSNotificationChatReplyMessage.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatReplyMessageFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;

  /// текст сообщения на которое отвечали
  @override
  final String message;

  /// текст сообщения-ответа
  @override
  final String replyMessage;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatReplyMessage(nObject: $nObject, user: $user, message: $message, replyMessage: $replyMessage, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatReplyMessage &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.message, message) || other.message == message) &&
            (identical(other.replyMessage, replyMessage) ||
                other.replyMessage == replyMessage) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, message, replyMessage, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatReplyMessageCopyWith<
          _$_DLSNotificationChatReplyMessage>
      get copyWith => __$$_DLSNotificationChatReplyMessageCopyWithImpl<
          _$_DLSNotificationChatReplyMessage>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatReplyMessage(nObject, user, message, replyMessage, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatReplyMessage?.call(
        nObject, user, message, replyMessage, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatReplyMessage != null) {
      return chatReplyMessage(nObject, user, message, replyMessage, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatReplyMessage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatReplyMessage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatReplyMessage != null) {
      return chatReplyMessage(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatReplyMessageToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatReplyMessage extends DLSNotification {
  const factory _DLSNotificationChatReplyMessage(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final String message,
          required final String replyMessage,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatReplyMessage;
  const _DLSNotificationChatReplyMessage._() : super._();

  factory _DLSNotificationChatReplyMessage.fromJson(Map<String, dynamic> json) =
      _$_DLSNotificationChatReplyMessage.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;

  /// текст сообщения на которое отвечали
  String get message;

  /// текст сообщения-ответа
  String get replyMessage;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatReplyMessageCopyWith<
          _$_DLSNotificationChatReplyMessage>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatAddYouToGroupCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatAddYouToGroupCopyWith(
          _$_DLSNotificationChatAddYouToGroup value,
          $Res Function(_$_DLSNotificationChatAddYouToGroup) then) =
      __$$_DLSNotificationChatAddYouToGroupCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      String groupName,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationChatAddYouToGroupCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatAddYouToGroup>
    implements _$$_DLSNotificationChatAddYouToGroupCopyWith<$Res> {
  __$$_DLSNotificationChatAddYouToGroupCopyWithImpl(
      _$_DLSNotificationChatAddYouToGroup _value,
      $Res Function(_$_DLSNotificationChatAddYouToGroup) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? groupName = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatAddYouToGroup(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      groupName: null == groupName
          ? _value.groupName
          : groupName // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatAddYouToGroup
    extends _DLSNotificationChatAddYouToGroup {
  const _$_DLSNotificationChatAddYouToGroup(
      {required this.nObject,
      required this.user,
      required this.groupName,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatAddYouToGroup',
        super._();

  factory _$_DLSNotificationChatAddYouToGroup.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatAddYouToGroupFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;

  /// имя группы
  @override
  final String groupName;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatAddYouToGroup(nObject: $nObject, user: $user, groupName: $groupName, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatAddYouToGroup &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.groupName, groupName) ||
                other.groupName == groupName) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, groupName, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatAddYouToGroupCopyWith<
          _$_DLSNotificationChatAddYouToGroup>
      get copyWith => __$$_DLSNotificationChatAddYouToGroupCopyWithImpl<
          _$_DLSNotificationChatAddYouToGroup>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatAddYouToGroup(nObject, user, groupName, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatAddYouToGroup?.call(nObject, user, groupName, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatAddYouToGroup != null) {
      return chatAddYouToGroup(nObject, user, groupName, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatAddYouToGroup(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatAddYouToGroup?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatAddYouToGroup != null) {
      return chatAddYouToGroup(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatAddYouToGroupToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatAddYouToGroup extends DLSNotification {
  const factory _DLSNotificationChatAddYouToGroup(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final String groupName,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatAddYouToGroup;
  const _DLSNotificationChatAddYouToGroup._() : super._();

  factory _DLSNotificationChatAddYouToGroup.fromJson(
      Map<String, dynamic> json) = _$_DLSNotificationChatAddYouToGroup.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;

  /// имя группы
  String get groupName;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatAddYouToGroupCopyWith<
          _$_DLSNotificationChatAddYouToGroup>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatAddGroupUsersCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatAddGroupUsersCopyWith(
          _$_DLSNotificationChatAddGroupUsers value,
          $Res Function(_$_DLSNotificationChatAddGroupUsers) then) =
      __$$_DLSNotificationChatAddGroupUsersCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      List<DLSNotificationUser> users,
      String groupName,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationChatAddGroupUsersCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatAddGroupUsers>
    implements _$$_DLSNotificationChatAddGroupUsersCopyWith<$Res> {
  __$$_DLSNotificationChatAddGroupUsersCopyWithImpl(
      _$_DLSNotificationChatAddGroupUsers _value,
      $Res Function(_$_DLSNotificationChatAddGroupUsers) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? users = null,
    Object? groupName = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatAddGroupUsers(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      groupName: null == groupName
          ? _value.groupName
          : groupName // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatAddGroupUsers
    extends _DLSNotificationChatAddGroupUsers {
  const _$_DLSNotificationChatAddGroupUsers(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationUser> users,
      required this.groupName,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'chatAddGroupUsers',
        super._();

  factory _$_DLSNotificationChatAddGroupUsers.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatAddGroupUsersFromJson(json);

  @override
  final DLSNotificationChat nObject;

  /// кто это сделал
  @override
  final DLSNotificationUser user;

  /// список пользователей с минимальным набором полей
  final List<DLSNotificationUser> _users;

  /// список пользователей с минимальным набором полей
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  /// имя группы
  @override
  final String groupName;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatAddGroupUsers(nObject: $nObject, user: $user, users: $users, groupName: $groupName, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatAddGroupUsers &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.groupName, groupName) ||
                other.groupName == groupName) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_users), groupName, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatAddGroupUsersCopyWith<
          _$_DLSNotificationChatAddGroupUsers>
      get copyWith => __$$_DLSNotificationChatAddGroupUsersCopyWithImpl<
          _$_DLSNotificationChatAddGroupUsers>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatAddGroupUsers(nObject, user, users, groupName, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatAddGroupUsers?.call(nObject, user, users, groupName, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatAddGroupUsers != null) {
      return chatAddGroupUsers(nObject, user, users, groupName, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatAddGroupUsers(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatAddGroupUsers?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatAddGroupUsers != null) {
      return chatAddGroupUsers(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatAddGroupUsersToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatAddGroupUsers extends DLSNotification {
  const factory _DLSNotificationChatAddGroupUsers(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationUser> users,
          required final String groupName,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatAddGroupUsers;
  const _DLSNotificationChatAddGroupUsers._() : super._();

  factory _DLSNotificationChatAddGroupUsers.fromJson(
      Map<String, dynamic> json) = _$_DLSNotificationChatAddGroupUsers.fromJson;

  @override
  DLSNotificationChat get nObject;

  /// кто это сделал
  DLSNotificationUser get user;

  /// список пользователей с минимальным набором полей
  List<DLSNotificationUser> get users;

  /// имя группы
  String get groupName;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatAddGroupUsersCopyWith<
          _$_DLSNotificationChatAddGroupUsers>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatRemoveGroupUsersCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatRemoveGroupUsersCopyWith(
          _$_DLSNotificationChatRemoveGroupUsers value,
          $Res Function(_$_DLSNotificationChatRemoveGroupUsers) then) =
      __$$_DLSNotificationChatRemoveGroupUsersCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      List<DLSNotificationUser> users,
      String groupName,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationChatRemoveGroupUsersCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatRemoveGroupUsers>
    implements _$$_DLSNotificationChatRemoveGroupUsersCopyWith<$Res> {
  __$$_DLSNotificationChatRemoveGroupUsersCopyWithImpl(
      _$_DLSNotificationChatRemoveGroupUsers _value,
      $Res Function(_$_DLSNotificationChatRemoveGroupUsers) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? users = null,
    Object? groupName = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatRemoveGroupUsers(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      users: null == users
          ? _value._users
          : users // ignore: cast_nullable_to_non_nullable
              as List<DLSNotificationUser>,
      groupName: null == groupName
          ? _value.groupName
          : groupName // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatRemoveGroupUsers
    extends _DLSNotificationChatRemoveGroupUsers {
  const _$_DLSNotificationChatRemoveGroupUsers(
      {required this.nObject,
      required this.user,
      required final List<DLSNotificationUser> users,
      required this.groupName,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : _users = users,
        $type = $type ?? 'chatRemoveGroupUsers',
        super._();

  factory _$_DLSNotificationChatRemoveGroupUsers.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatRemoveGroupUsersFromJson(json);

  @override
  final DLSNotificationChat nObject;

  /// кто это сделал
  @override
  final DLSNotificationUser user;

  /// список пользователей с минимальным набором полей
  final List<DLSNotificationUser> _users;

  /// список пользователей с минимальным набором полей
  @override
  List<DLSNotificationUser> get users {
    if (_users is EqualUnmodifiableListView) return _users;
    // ignore: implicit_dynamic_type
    return EqualUnmodifiableListView(_users);
  }

  /// имя группы
  @override
  final String groupName;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatRemoveGroupUsers(nObject: $nObject, user: $user, users: $users, groupName: $groupName, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatRemoveGroupUsers &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            const DeepCollectionEquality().equals(other._users, _users) &&
            (identical(other.groupName, groupName) ||
                other.groupName == groupName) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode => Object.hash(runtimeType, nObject, user,
      const DeepCollectionEquality().hash(_users), groupName, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatRemoveGroupUsersCopyWith<
          _$_DLSNotificationChatRemoveGroupUsers>
      get copyWith => __$$_DLSNotificationChatRemoveGroupUsersCopyWithImpl<
          _$_DLSNotificationChatRemoveGroupUsers>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatRemoveGroupUsers(nObject, user, users, groupName, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatRemoveGroupUsers?.call(
        nObject, user, users, groupName, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatRemoveGroupUsers != null) {
      return chatRemoveGroupUsers(nObject, user, users, groupName, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatRemoveGroupUsers(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatRemoveGroupUsers?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatRemoveGroupUsers != null) {
      return chatRemoveGroupUsers(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatRemoveGroupUsersToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatRemoveGroupUsers extends DLSNotification {
  const factory _DLSNotificationChatRemoveGroupUsers(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final List<DLSNotificationUser> users,
          required final String groupName,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatRemoveGroupUsers;
  const _DLSNotificationChatRemoveGroupUsers._() : super._();

  factory _DLSNotificationChatRemoveGroupUsers.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationChatRemoveGroupUsers.fromJson;

  @override
  DLSNotificationChat get nObject;

  /// кто это сделал
  DLSNotificationUser get user;

  /// список пользователей с минимальным набором полей
  List<DLSNotificationUser> get users;

  /// имя группы
  String get groupName;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatRemoveGroupUsersCopyWith<
          _$_DLSNotificationChatRemoveGroupUsers>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatAddEventCommentCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatAddEventCommentCopyWith(
          _$_DLSNotificationChatAddEventComment value,
          $Res Function(_$_DLSNotificationChatAddEventComment) then) =
      __$$_DLSNotificationChatAddEventCommentCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      DLSNotificationEvent event,
      String comment,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
  $DLSNotificationEventCopyWith<$Res> get event;
}

/// @nodoc
class __$$_DLSNotificationChatAddEventCommentCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatAddEventComment>
    implements _$$_DLSNotificationChatAddEventCommentCopyWith<$Res> {
  __$$_DLSNotificationChatAddEventCommentCopyWithImpl(
      _$_DLSNotificationChatAddEventComment _value,
      $Res Function(_$_DLSNotificationChatAddEventComment) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? event = null,
    Object? comment = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatAddEventComment(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      event: null == event
          ? _value.event
          : event // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      comment: null == comment
          ? _value.comment
          : comment // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get event {
    return $DLSNotificationEventCopyWith<$Res>(_value.event, (value) {
      return _then(_value.copyWith(event: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatAddEventComment
    extends _DLSNotificationChatAddEventComment {
  const _$_DLSNotificationChatAddEventComment(
      {required this.nObject,
      required this.user,
      required this.event,
      required this.comment,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatAddEventComment',
        super._();

  factory _$_DLSNotificationChatAddEventComment.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatAddEventCommentFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;

  /// мероприятие
  @override
  final DLSNotificationEvent event;

  /// коммент
  @override
  final String comment;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatAddEventComment(nObject: $nObject, user: $user, event: $event, comment: $comment, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatAddEventComment &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.event, event) || other.event == event) &&
            (identical(other.comment, comment) || other.comment == comment) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, event, comment, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatAddEventCommentCopyWith<
          _$_DLSNotificationChatAddEventComment>
      get copyWith => __$$_DLSNotificationChatAddEventCommentCopyWithImpl<
          _$_DLSNotificationChatAddEventComment>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatAddEventComment(nObject, user, event, comment, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatAddEventComment?.call(nObject, user, event, comment, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatAddEventComment != null) {
      return chatAddEventComment(nObject, user, event, comment, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatAddEventComment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatAddEventComment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatAddEventComment != null) {
      return chatAddEventComment(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatAddEventCommentToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatAddEventComment extends DLSNotification {
  const factory _DLSNotificationChatAddEventComment(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final DLSNotificationEvent event,
          required final String comment,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatAddEventComment;
  const _DLSNotificationChatAddEventComment._() : super._();

  factory _DLSNotificationChatAddEventComment.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationChatAddEventComment.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;

  /// мероприятие
  DLSNotificationEvent get event;

  /// коммент
  String get comment;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatAddEventCommentCopyWith<
          _$_DLSNotificationChatAddEventComment>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatRemoveEventCommentCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatRemoveEventCommentCopyWith(
          _$_DLSNotificationChatRemoveEventComment value,
          $Res Function(_$_DLSNotificationChatRemoveEventComment) then) =
      __$$_DLSNotificationChatRemoveEventCommentCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      DLSNotificationEvent event,
      String comment,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
  $DLSNotificationEventCopyWith<$Res> get event;
}

/// @nodoc
class __$$_DLSNotificationChatRemoveEventCommentCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatRemoveEventComment>
    implements _$$_DLSNotificationChatRemoveEventCommentCopyWith<$Res> {
  __$$_DLSNotificationChatRemoveEventCommentCopyWithImpl(
      _$_DLSNotificationChatRemoveEventComment _value,
      $Res Function(_$_DLSNotificationChatRemoveEventComment) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? event = null,
    Object? comment = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatRemoveEventComment(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      event: null == event
          ? _value.event
          : event // ignore: cast_nullable_to_non_nullable
              as DLSNotificationEvent,
      comment: null == comment
          ? _value.comment
          : comment // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationEventCopyWith<$Res> get event {
    return $DLSNotificationEventCopyWith<$Res>(_value.event, (value) {
      return _then(_value.copyWith(event: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatRemoveEventComment
    extends _DLSNotificationChatRemoveEventComment {
  const _$_DLSNotificationChatRemoveEventComment(
      {required this.nObject,
      required this.user,
      required this.event,
      required this.comment,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatRemoveEventComment',
        super._();

  factory _$_DLSNotificationChatRemoveEventComment.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatRemoveEventCommentFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;

  /// мероприятие
  @override
  final DLSNotificationEvent event;

  /// коммент
  @override
  final String comment;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatRemoveEventComment(nObject: $nObject, user: $user, event: $event, comment: $comment, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatRemoveEventComment &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.event, event) || other.event == event) &&
            (identical(other.comment, comment) || other.comment == comment) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, event, comment, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatRemoveEventCommentCopyWith<
          _$_DLSNotificationChatRemoveEventComment>
      get copyWith => __$$_DLSNotificationChatRemoveEventCommentCopyWithImpl<
          _$_DLSNotificationChatRemoveEventComment>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatRemoveEventComment(nObject, user, event, comment, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatRemoveEventComment?.call(
        nObject, user, event, comment, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatRemoveEventComment != null) {
      return chatRemoveEventComment(nObject, user, event, comment, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatRemoveEventComment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatRemoveEventComment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatRemoveEventComment != null) {
      return chatRemoveEventComment(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatRemoveEventCommentToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatRemoveEventComment extends DLSNotification {
  const factory _DLSNotificationChatRemoveEventComment(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final DLSNotificationEvent event,
          required final String comment,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatRemoveEventComment;
  const _DLSNotificationChatRemoveEventComment._() : super._();

  factory _DLSNotificationChatRemoveEventComment.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationChatRemoveEventComment.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;

  /// мероприятие
  DLSNotificationEvent get event;

  /// коммент
  String get comment;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatRemoveEventCommentCopyWith<
          _$_DLSNotificationChatRemoveEventComment>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatAddTaskCommentsCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatAddTaskCommentsCopyWith(
          _$_DLSNotificationChatAddTaskComments value,
          $Res Function(_$_DLSNotificationChatAddTaskComments) then) =
      __$$_DLSNotificationChatAddTaskCommentsCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      DLSNotificationTask task,
      String comment,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
  $DLSNotificationTaskCopyWith<$Res> get task;
}

/// @nodoc
class __$$_DLSNotificationChatAddTaskCommentsCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatAddTaskComments>
    implements _$$_DLSNotificationChatAddTaskCommentsCopyWith<$Res> {
  __$$_DLSNotificationChatAddTaskCommentsCopyWithImpl(
      _$_DLSNotificationChatAddTaskComments _value,
      $Res Function(_$_DLSNotificationChatAddTaskComments) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? task = null,
    Object? comment = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatAddTaskComments(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      task: null == task
          ? _value.task
          : task // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      comment: null == comment
          ? _value.comment
          : comment // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get task {
    return $DLSNotificationTaskCopyWith<$Res>(_value.task, (value) {
      return _then(_value.copyWith(task: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatAddTaskComments
    extends _DLSNotificationChatAddTaskComments {
  const _$_DLSNotificationChatAddTaskComments(
      {required this.nObject,
      required this.user,
      required this.task,
      required this.comment,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatAddTaskComment',
        super._();

  factory _$_DLSNotificationChatAddTaskComments.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatAddTaskCommentsFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;

  /// задача
  @override
  final DLSNotificationTask task;

  /// коммент
  @override
  final String comment;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatAddTaskComment(nObject: $nObject, user: $user, task: $task, comment: $comment, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatAddTaskComments &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.task, task) || other.task == task) &&
            (identical(other.comment, comment) || other.comment == comment) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, task, comment, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatAddTaskCommentsCopyWith<
          _$_DLSNotificationChatAddTaskComments>
      get copyWith => __$$_DLSNotificationChatAddTaskCommentsCopyWithImpl<
          _$_DLSNotificationChatAddTaskComments>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatAddTaskComment(nObject, user, task, comment, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatAddTaskComment?.call(nObject, user, task, comment, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatAddTaskComment != null) {
      return chatAddTaskComment(nObject, user, task, comment, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatAddTaskComment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatAddTaskComment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatAddTaskComment != null) {
      return chatAddTaskComment(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatAddTaskCommentsToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatAddTaskComments extends DLSNotification {
  const factory _DLSNotificationChatAddTaskComments(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final DLSNotificationTask task,
          required final String comment,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatAddTaskComments;
  const _DLSNotificationChatAddTaskComments._() : super._();

  factory _DLSNotificationChatAddTaskComments.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationChatAddTaskComments.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;

  /// задача
  DLSNotificationTask get task;

  /// коммент
  String get comment;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatAddTaskCommentsCopyWith<
          _$_DLSNotificationChatAddTaskComments>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatRemoveTaskCommentsCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatRemoveTaskCommentsCopyWith(
          _$_DLSNotificationChatRemoveTaskComments value,
          $Res Function(_$_DLSNotificationChatRemoveTaskComments) then) =
      __$$_DLSNotificationChatRemoveTaskCommentsCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      DLSNotificationTask task,
      String comment,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
  $DLSNotificationTaskCopyWith<$Res> get task;
}

/// @nodoc
class __$$_DLSNotificationChatRemoveTaskCommentsCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatRemoveTaskComments>
    implements _$$_DLSNotificationChatRemoveTaskCommentsCopyWith<$Res> {
  __$$_DLSNotificationChatRemoveTaskCommentsCopyWithImpl(
      _$_DLSNotificationChatRemoveTaskComments _value,
      $Res Function(_$_DLSNotificationChatRemoveTaskComments) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? task = null,
    Object? comment = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatRemoveTaskComments(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      task: null == task
          ? _value.task
          : task // ignore: cast_nullable_to_non_nullable
              as DLSNotificationTask,
      comment: null == comment
          ? _value.comment
          : comment // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationTaskCopyWith<$Res> get task {
    return $DLSNotificationTaskCopyWith<$Res>(_value.task, (value) {
      return _then(_value.copyWith(task: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatRemoveTaskComments
    extends _DLSNotificationChatRemoveTaskComments {
  const _$_DLSNotificationChatRemoveTaskComments(
      {required this.nObject,
      required this.user,
      required this.task,
      required this.comment,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatRemoveTaskComment',
        super._();

  factory _$_DLSNotificationChatRemoveTaskComments.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatRemoveTaskCommentsFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;

  /// задача
  @override
  final DLSNotificationTask task;

  /// коммент
  @override
  final String comment;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatRemoveTaskComment(nObject: $nObject, user: $user, task: $task, comment: $comment, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatRemoveTaskComments &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.task, task) || other.task == task) &&
            (identical(other.comment, comment) || other.comment == comment) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, task, comment, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatRemoveTaskCommentsCopyWith<
          _$_DLSNotificationChatRemoveTaskComments>
      get copyWith => __$$_DLSNotificationChatRemoveTaskCommentsCopyWithImpl<
          _$_DLSNotificationChatRemoveTaskComments>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatRemoveTaskComment(nObject, user, task, comment, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatRemoveTaskComment?.call(nObject, user, task, comment, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatRemoveTaskComment != null) {
      return chatRemoveTaskComment(nObject, user, task, comment, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatRemoveTaskComment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatRemoveTaskComment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatRemoveTaskComment != null) {
      return chatRemoveTaskComment(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatRemoveTaskCommentsToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatRemoveTaskComments extends DLSNotification {
  const factory _DLSNotificationChatRemoveTaskComments(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final DLSNotificationTask task,
          required final String comment,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatRemoveTaskComments;
  const _DLSNotificationChatRemoveTaskComments._() : super._();

  factory _DLSNotificationChatRemoveTaskComments.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationChatRemoveTaskComments.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;

  /// задача
  DLSNotificationTask get task;

  /// коммент
  String get comment;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatRemoveTaskCommentsCopyWith<
          _$_DLSNotificationChatRemoveTaskComments>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatChangeGroupNameCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatChangeGroupNameCopyWith(
          _$_DLSNotificationChatChangeGroupName value,
          $Res Function(_$_DLSNotificationChatChangeGroupName) then) =
      __$$_DLSNotificationChatChangeGroupNameCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      String namePrev,
      String nameCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationChatChangeGroupNameCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatChangeGroupName>
    implements _$$_DLSNotificationChatChangeGroupNameCopyWith<$Res> {
  __$$_DLSNotificationChatChangeGroupNameCopyWithImpl(
      _$_DLSNotificationChatChangeGroupName _value,
      $Res Function(_$_DLSNotificationChatChangeGroupName) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? namePrev = null,
    Object? nameCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatChangeGroupName(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      namePrev: null == namePrev
          ? _value.namePrev
          : namePrev // ignore: cast_nullable_to_non_nullable
              as String,
      nameCur: null == nameCur
          ? _value.nameCur
          : nameCur // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatChangeGroupName
    extends _DLSNotificationChatChangeGroupName {
  const _$_DLSNotificationChatChangeGroupName(
      {required this.nObject,
      required this.user,
      required this.namePrev,
      required this.nameCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatChangeGroupName',
        super._();

  factory _$_DLSNotificationChatChangeGroupName.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatChangeGroupNameFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;
  @override
  final String namePrev;
  @override
  final String nameCur;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatChangeGroupName(nObject: $nObject, user: $user, namePrev: $namePrev, nameCur: $nameCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatChangeGroupName &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.namePrev, namePrev) ||
                other.namePrev == namePrev) &&
            (identical(other.nameCur, nameCur) || other.nameCur == nameCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, namePrev, nameCur, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatChangeGroupNameCopyWith<
          _$_DLSNotificationChatChangeGroupName>
      get copyWith => __$$_DLSNotificationChatChangeGroupNameCopyWithImpl<
          _$_DLSNotificationChatChangeGroupName>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatChangeGroupName(nObject, user, namePrev, nameCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatChangeGroupName?.call(
        nObject, user, namePrev, nameCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatChangeGroupName != null) {
      return chatChangeGroupName(nObject, user, namePrev, nameCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatChangeGroupName(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatChangeGroupName?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatChangeGroupName != null) {
      return chatChangeGroupName(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatChangeGroupNameToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatChangeGroupName extends DLSNotification {
  const factory _DLSNotificationChatChangeGroupName(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final String namePrev,
          required final String nameCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatChangeGroupName;
  const _DLSNotificationChatChangeGroupName._() : super._();

  factory _DLSNotificationChatChangeGroupName.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationChatChangeGroupName.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;
  String get namePrev;
  String get nameCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatChangeGroupNameCopyWith<
          _$_DLSNotificationChatChangeGroupName>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$_DLSNotificationChatChangeGroupAvatarCopyWith<$Res>
    implements $DLSNotificationCopyWith<$Res> {
  factory _$$_DLSNotificationChatChangeGroupAvatarCopyWith(
          _$_DLSNotificationChatChangeGroupAvatar value,
          $Res Function(_$_DLSNotificationChatChangeGroupAvatar) then) =
      __$$_DLSNotificationChatChangeGroupAvatarCopyWithImpl<$Res>;
  @override
  @useResult
  $Res call(
      {DLSNotificationChat nObject,
      DLSNotificationUser user,
      String avatarPrev,
      String avatarCur,
      @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform});

  $DLSNotificationChatCopyWith<$Res> get nObject;
  $DLSNotificationUserCopyWith<$Res> get user;
}

/// @nodoc
class __$$_DLSNotificationChatChangeGroupAvatarCopyWithImpl<$Res>
    extends _$DLSNotificationCopyWithImpl<$Res,
        _$_DLSNotificationChatChangeGroupAvatar>
    implements _$$_DLSNotificationChatChangeGroupAvatarCopyWith<$Res> {
  __$$_DLSNotificationChatChangeGroupAvatarCopyWithImpl(
      _$_DLSNotificationChatChangeGroupAvatar _value,
      $Res Function(_$_DLSNotificationChatChangeGroupAvatar) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? nObject = null,
    Object? user = null,
    Object? avatarPrev = null,
    Object? avatarCur = null,
    Object? platform = freezed,
  }) {
    return _then(_$_DLSNotificationChatChangeGroupAvatar(
      nObject: null == nObject
          ? _value.nObject
          : nObject // ignore: cast_nullable_to_non_nullable
              as DLSNotificationChat,
      user: null == user
          ? _value.user
          : user // ignore: cast_nullable_to_non_nullable
              as DLSNotificationUser,
      avatarPrev: null == avatarPrev
          ? _value.avatarPrev
          : avatarPrev // ignore: cast_nullable_to_non_nullable
              as String,
      avatarCur: null == avatarCur
          ? _value.avatarCur
          : avatarCur // ignore: cast_nullable_to_non_nullable
              as String,
      platform: freezed == platform
          ? _value.platform
          : platform // ignore: cast_nullable_to_non_nullable
              as DlsPlatformNotificationType?,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationChatCopyWith<$Res> get nObject {
    return $DLSNotificationChatCopyWith<$Res>(_value.nObject, (value) {
      return _then(_value.copyWith(nObject: value));
    });
  }

  @override
  @pragma('vm:prefer-inline')
  $DLSNotificationUserCopyWith<$Res> get user {
    return $DLSNotificationUserCopyWith<$Res>(_value.user, (value) {
      return _then(_value.copyWith(user: value));
    });
  }
}

/// @nodoc
@JsonSerializable()
class _$_DLSNotificationChatChangeGroupAvatar
    extends _DLSNotificationChatChangeGroupAvatar {
  const _$_DLSNotificationChatChangeGroupAvatar(
      {required this.nObject,
      required this.user,
      required this.avatarPrev,
      required this.avatarCur,
      @JsonKey(name: 'platform_type') this.platform,
      final String? $type})
      : $type = $type ?? 'chatChangeGroupAvatar',
        super._();

  factory _$_DLSNotificationChatChangeGroupAvatar.fromJson(
          Map<String, dynamic> json) =>
      _$$_DLSNotificationChatChangeGroupAvatarFromJson(json);

  @override
  final DLSNotificationChat nObject;
  @override
  final DLSNotificationUser user;
  @override
  final String avatarPrev;
  @override
  final String avatarCur;
  @override
  @JsonKey(name: 'platform_type')
  final DlsPlatformNotificationType? platform;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'DLSNotification.chatChangeGroupAvatar(nObject: $nObject, user: $user, avatarPrev: $avatarPrev, avatarCur: $avatarCur, platform: $platform)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$_DLSNotificationChatChangeGroupAvatar &&
            (identical(other.nObject, nObject) || other.nObject == nObject) &&
            (identical(other.user, user) || other.user == user) &&
            (identical(other.avatarPrev, avatarPrev) ||
                other.avatarPrev == avatarPrev) &&
            (identical(other.avatarCur, avatarCur) ||
                other.avatarCur == avatarCur) &&
            (identical(other.platform, platform) ||
                other.platform == platform));
  }

  @JsonKey(ignore: true)
  @override
  int get hashCode =>
      Object.hash(runtimeType, nObject, user, avatarPrev, avatarCur, platform);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$_DLSNotificationChatChangeGroupAvatarCopyWith<
          _$_DLSNotificationChatChangeGroupAvatar>
      get copyWith => __$$_DLSNotificationChatChangeGroupAvatarCopyWithImpl<
          _$_DLSNotificationChatChangeGroupAvatar>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskChangeAnyString,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouAssigner,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouWatcher,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddYouResponsible,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)
        taskAddAssigners,
    required TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)
        taskAddResponsible,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeStatus,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangeDeadline,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskChangePriority,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveFiles,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveWatchers,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveDependencies,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveSprints,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveEvents,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveTodos,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskAddChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRemoveChildTasks,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskRestrictAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskExpandAccess,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskLock,
    required TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskUnlock,
    required TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallStart,
    required TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskCallEnd,
    required TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskReminder,
    required TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskOverdue,
    required TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) taskInformation,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeAnyString,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInvite,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemove,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeDate,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeTime,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangeFormat,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventChangePlace,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventAddFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRemoveFiles,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventRestrictAccess,
    required TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventExpandAccess,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventStart,
    required TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventEnd,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallStart,
    required TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventCallEnd,
    required TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) eventInformation,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatPrivateMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatGroupMessage,
    required TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallStart,
    required TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatCallEnd,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatReplyMessage,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddYouToGroup,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveGroupUsers,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveEventComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatAddTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatRemoveTaskComment,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupName,
    required TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform) chatChangeGroupAvatar,
  }) {
    return chatChangeGroupAvatar(
        nObject, user, avatarPrev, avatarCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult? Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult? Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult? Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult? Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult? Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult? Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult? Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult? Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult? Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult? Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult? Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult? Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult? Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult? Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
  }) {
    return chatChangeGroupAvatar?.call(
        nObject, user, avatarPrev, avatarCur, platform);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            String text1,
            String text2,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskChangeAnyString,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouAssigner,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouWatcher,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddYouResponsible,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type')
                DlsPlatformNotificationType? platform)?
        taskAddAssigners,
    TResult Function(
            DLSNotificationTask nObject,
            DLSNotificationUser user,
            List<DLSNotificationUser> users,
            @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)?
        taskAddResponsible,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectStatus statusPrev, DLSNotificationObjectStatus statusCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeStatus,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DateTime deadlinePrev, DateTime deadlineCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangeDeadline,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, DLSNotificationObjectPriority priorityPrev, DLSNotificationObjectPriority priorityCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskChangePriority,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveFiles,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveWatchers,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveDependencies,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationSprint> sprints, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveSprints,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationEvent> events, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveEvents,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTodo> todos, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveTodos,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskAddChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, List<DLSNotificationTask> tasks, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRemoveChildTasks,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskRestrictAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskExpandAccess,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskLock,
    TResult Function(DLSNotificationTask nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskUnlock,
    TResult Function(DLSNotificationTask nObject, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallStart,
    TResult Function(DLSNotificationTask nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskCallEnd,
    TResult Function(DLSNotificationTask nObject, String reminderText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskReminder,
    TResult Function(DLSNotificationTask nObject, String overdueText, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskOverdue,
    TResult Function(DLSNotificationTask nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? taskInformation,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String text1, String text2, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeAnyString,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInvite,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemove,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DateTime datetimePrev, DateTime datetimeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeDate,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<DateTime> timePrev, List<DateTime> timeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeTime,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, DLSNotificationEventFormat formatPrev, DLSNotificationEventFormat formatCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangeFormat,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, String placePrev, String placeCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventChangePlace,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventAddFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, List<dynamic> files, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRemoveFiles,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventRestrictAccess,
    TResult Function(DLSNotificationEvent nObject, DLSNotificationUser user, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventExpandAccess,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventStart,
    TResult Function(DLSNotificationEvent nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventEnd,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, DateTime startAt, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallStart,
    TResult Function(DLSNotificationEvent nObject, List<DLSNotificationUser> users, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventCallEnd,
    TResult Function(DLSNotificationEvent nObject, String information, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? eventInformation,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatPrivateMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatGroupMessage,
    TResult Function(DLSNotificationChat nObject, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallStart,
    TResult Function(DLSNotificationChat nObject, int duration, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatCallEnd,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String message, String replyMessage, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatReplyMessage,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddYouToGroup,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, List<DLSNotificationUser> users, String groupName, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveGroupUsers,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationEvent event, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveEventComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatAddTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, DLSNotificationTask task, String comment, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatRemoveTaskComment,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String namePrev, String nameCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupName,
    TResult Function(DLSNotificationChat nObject, DLSNotificationUser user, String avatarPrev, String avatarCur, @JsonKey(name: 'platform_type') DlsPlatformNotificationType? platform)? chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatChangeGroupAvatar != null) {
      return chatChangeGroupAvatar(
          nObject, user, avatarPrev, avatarCur, platform);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(_DLSNotificationTaskAnyString value)
        taskChangeAnyString,
    required TResult Function(_DLSNotificationTaskAddYouAssigner value)
        taskAddYouAssigner,
    required TResult Function(_DLSNotificationTaskAddYouWatcher value)
        taskAddYouWatcher,
    required TResult Function(_DLSNotificationTaskAddYouResponsible value)
        taskAddYouResponsible,
    required TResult Function(_DLSNotificationTaskAddAssigners value)
        taskAddAssigners,
    required TResult Function(_DLSNotificationTaskAddResponsible value)
        taskAddResponsible,
    required TResult Function(_DLSNotificationTaskChangeStatus value)
        taskChangeStatus,
    required TResult Function(_DLSNotificationTaskChangeDeadline value)
        taskChangeDeadline,
    required TResult Function(_DLSNotificationTaskChangePriority value)
        taskChangePriority,
    required TResult Function(_DLSNotificationTaskAddFiles value) taskAddFiles,
    required TResult Function(_DLSNotificationTaskRemoveFiles value)
        taskRemoveFiles,
    required TResult Function(_DLSNotificationTaskAddWatchers value)
        taskAddWatchers,
    required TResult Function(_DLSNotificationTaskRemoveWatchers value)
        taskRemoveWatchers,
    required TResult Function(_DLSNotificationTaskAddDependencies value)
        taskAddDependencies,
    required TResult Function(_DLSNotificationTaskRemoveDependencies value)
        taskRemoveDependencies,
    required TResult Function(_DLSNotificationTaskAddSprints value)
        taskAddSprints,
    required TResult Function(_DLSNotificationTaskRemoveSprints value)
        taskRemoveSprints,
    required TResult Function(_DLSNotificationTaskAddEvents value)
        taskAddEvents,
    required TResult Function(_DLSNotificationTaskRemoveEvents value)
        taskRemoveEvents,
    required TResult Function(_DLSNotificationTaskAddTodos value) taskAddTodos,
    required TResult Function(_DLSNotificationTaskRemoveTodos value)
        taskRemoveTodos,
    required TResult Function(_DLSNotificationTaskChildTasks value)
        taskAddChildTasks,
    required TResult Function(_DLSNotificationTaskRemoveTasks value)
        taskRemoveChildTasks,
    required TResult Function(_DLSNotificationTaskRestrictAccess value)
        taskRestrictAccess,
    required TResult Function(_DLSNotificationTaskExpandAccess value)
        taskExpandAccess,
    required TResult Function(_DLSNotificationTaskLock value) taskLock,
    required TResult Function(_DLSNotificationTaskUnlock value) taskUnlock,
    required TResult Function(_DLSNotificationTaskCallStart value)
        taskCallStart,
    required TResult Function(_DLSNotificationTaskCallEnd value) taskCallEnd,
    required TResult Function(_DLSNotificationTaskReminder value) taskReminder,
    required TResult Function(_DLSNotificationTaskOverdue value) taskOverdue,
    required TResult Function(_DLSNotificationTaskInformation value)
        taskInformation,
    required TResult Function(_DLSNotificationEventAnyString value)
        eventChangeAnyString,
    required TResult Function(_DLSNotificationEventInvite value) eventInvite,
    required TResult Function(_DLSNotificationEventRemove value) eventRemove,
    required TResult Function(_DLSNotificationEventChangeDate value)
        eventChangeDate,
    required TResult Function(_DLSNotificationEventChangeTime value)
        eventChangeTime,
    required TResult Function(_DLSNotificationEventChangeFormat value)
        eventChangeFormat,
    required TResult Function(_DLSNotificationEventChangePlace value)
        eventChangePlace,
    required TResult Function(_DLSNotificationEventAddFiles value)
        eventAddFiles,
    required TResult Function(_DLSNotificationEventRemoveFiles value)
        eventRemoveFiles,
    required TResult Function(_DLSNotificationEventRestrictAccess value)
        eventRestrictAccess,
    required TResult Function(_DLSNotificationEventExpandAccess value)
        eventExpandAccess,
    required TResult Function(_DLSNotificationEventStart value) eventStart,
    required TResult Function(_DLSNotificationEventEnd value) eventEnd,
    required TResult Function(_DLSNotificationEventCallStart value)
        eventCallStart,
    required TResult Function(_DLSNotificationEventCallEnd value) eventCallEnd,
    required TResult Function(_DLSNotificationEventInformation value)
        eventInformation,
    required TResult Function(_DLSNotificationChatPrivateMessage value)
        chatPrivateMessage,
    required TResult Function(_DLSNotificationChatGroupMessage value)
        chatGroupMessage,
    required TResult Function(_DLSNotificationChatCallStart value)
        chatCallStart,
    required TResult Function(_DLSNotificationChatCallEnd value) chatCallEnd,
    required TResult Function(_DLSNotificationChatReplyMessage value)
        chatReplyMessage,
    required TResult Function(_DLSNotificationChatAddYouToGroup value)
        chatAddYouToGroup,
    required TResult Function(_DLSNotificationChatAddGroupUsers value)
        chatAddGroupUsers,
    required TResult Function(_DLSNotificationChatRemoveGroupUsers value)
        chatRemoveGroupUsers,
    required TResult Function(_DLSNotificationChatAddEventComment value)
        chatAddEventComment,
    required TResult Function(_DLSNotificationChatRemoveEventComment value)
        chatRemoveEventComment,
    required TResult Function(_DLSNotificationChatAddTaskComments value)
        chatAddTaskComment,
    required TResult Function(_DLSNotificationChatRemoveTaskComments value)
        chatRemoveTaskComment,
    required TResult Function(_DLSNotificationChatChangeGroupName value)
        chatChangeGroupName,
    required TResult Function(_DLSNotificationChatChangeGroupAvatar value)
        chatChangeGroupAvatar,
  }) {
    return chatChangeGroupAvatar(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult? Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult? Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult? Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult? Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult? Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult? Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult? Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult? Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult? Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult? Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult? Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult? Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult? Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult? Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult? Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult? Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult? Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult? Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult? Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult? Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult? Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult? Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult? Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult? Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult? Function(_DLSNotificationTaskLock value)? taskLock,
    TResult? Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult? Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult? Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult? Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult? Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult? Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult? Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult? Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult? Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult? Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult? Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult? Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult? Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult? Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult? Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult? Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult? Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult? Function(_DLSNotificationEventStart value)? eventStart,
    TResult? Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult? Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult? Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult? Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult? Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult? Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult? Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult? Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult? Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult? Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult? Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult? Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult? Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult? Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult? Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult? Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult? Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult? Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
  }) {
    return chatChangeGroupAvatar?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(_DLSNotificationTaskAnyString value)? taskChangeAnyString,
    TResult Function(_DLSNotificationTaskAddYouAssigner value)?
        taskAddYouAssigner,
    TResult Function(_DLSNotificationTaskAddYouWatcher value)?
        taskAddYouWatcher,
    TResult Function(_DLSNotificationTaskAddYouResponsible value)?
        taskAddYouResponsible,
    TResult Function(_DLSNotificationTaskAddAssigners value)? taskAddAssigners,
    TResult Function(_DLSNotificationTaskAddResponsible value)?
        taskAddResponsible,
    TResult Function(_DLSNotificationTaskChangeStatus value)? taskChangeStatus,
    TResult Function(_DLSNotificationTaskChangeDeadline value)?
        taskChangeDeadline,
    TResult Function(_DLSNotificationTaskChangePriority value)?
        taskChangePriority,
    TResult Function(_DLSNotificationTaskAddFiles value)? taskAddFiles,
    TResult Function(_DLSNotificationTaskRemoveFiles value)? taskRemoveFiles,
    TResult Function(_DLSNotificationTaskAddWatchers value)? taskAddWatchers,
    TResult Function(_DLSNotificationTaskRemoveWatchers value)?
        taskRemoveWatchers,
    TResult Function(_DLSNotificationTaskAddDependencies value)?
        taskAddDependencies,
    TResult Function(_DLSNotificationTaskRemoveDependencies value)?
        taskRemoveDependencies,
    TResult Function(_DLSNotificationTaskAddSprints value)? taskAddSprints,
    TResult Function(_DLSNotificationTaskRemoveSprints value)?
        taskRemoveSprints,
    TResult Function(_DLSNotificationTaskAddEvents value)? taskAddEvents,
    TResult Function(_DLSNotificationTaskRemoveEvents value)? taskRemoveEvents,
    TResult Function(_DLSNotificationTaskAddTodos value)? taskAddTodos,
    TResult Function(_DLSNotificationTaskRemoveTodos value)? taskRemoveTodos,
    TResult Function(_DLSNotificationTaskChildTasks value)? taskAddChildTasks,
    TResult Function(_DLSNotificationTaskRemoveTasks value)?
        taskRemoveChildTasks,
    TResult Function(_DLSNotificationTaskRestrictAccess value)?
        taskRestrictAccess,
    TResult Function(_DLSNotificationTaskExpandAccess value)? taskExpandAccess,
    TResult Function(_DLSNotificationTaskLock value)? taskLock,
    TResult Function(_DLSNotificationTaskUnlock value)? taskUnlock,
    TResult Function(_DLSNotificationTaskCallStart value)? taskCallStart,
    TResult Function(_DLSNotificationTaskCallEnd value)? taskCallEnd,
    TResult Function(_DLSNotificationTaskReminder value)? taskReminder,
    TResult Function(_DLSNotificationTaskOverdue value)? taskOverdue,
    TResult Function(_DLSNotificationTaskInformation value)? taskInformation,
    TResult Function(_DLSNotificationEventAnyString value)?
        eventChangeAnyString,
    TResult Function(_DLSNotificationEventInvite value)? eventInvite,
    TResult Function(_DLSNotificationEventRemove value)? eventRemove,
    TResult Function(_DLSNotificationEventChangeDate value)? eventChangeDate,
    TResult Function(_DLSNotificationEventChangeTime value)? eventChangeTime,
    TResult Function(_DLSNotificationEventChangeFormat value)?
        eventChangeFormat,
    TResult Function(_DLSNotificationEventChangePlace value)? eventChangePlace,
    TResult Function(_DLSNotificationEventAddFiles value)? eventAddFiles,
    TResult Function(_DLSNotificationEventRemoveFiles value)? eventRemoveFiles,
    TResult Function(_DLSNotificationEventRestrictAccess value)?
        eventRestrictAccess,
    TResult Function(_DLSNotificationEventExpandAccess value)?
        eventExpandAccess,
    TResult Function(_DLSNotificationEventStart value)? eventStart,
    TResult Function(_DLSNotificationEventEnd value)? eventEnd,
    TResult Function(_DLSNotificationEventCallStart value)? eventCallStart,
    TResult Function(_DLSNotificationEventCallEnd value)? eventCallEnd,
    TResult Function(_DLSNotificationEventInformation value)? eventInformation,
    TResult Function(_DLSNotificationChatPrivateMessage value)?
        chatPrivateMessage,
    TResult Function(_DLSNotificationChatGroupMessage value)? chatGroupMessage,
    TResult Function(_DLSNotificationChatCallStart value)? chatCallStart,
    TResult Function(_DLSNotificationChatCallEnd value)? chatCallEnd,
    TResult Function(_DLSNotificationChatReplyMessage value)? chatReplyMessage,
    TResult Function(_DLSNotificationChatAddYouToGroup value)?
        chatAddYouToGroup,
    TResult Function(_DLSNotificationChatAddGroupUsers value)?
        chatAddGroupUsers,
    TResult Function(_DLSNotificationChatRemoveGroupUsers value)?
        chatRemoveGroupUsers,
    TResult Function(_DLSNotificationChatAddEventComment value)?
        chatAddEventComment,
    TResult Function(_DLSNotificationChatRemoveEventComment value)?
        chatRemoveEventComment,
    TResult Function(_DLSNotificationChatAddTaskComments value)?
        chatAddTaskComment,
    TResult Function(_DLSNotificationChatRemoveTaskComments value)?
        chatRemoveTaskComment,
    TResult Function(_DLSNotificationChatChangeGroupName value)?
        chatChangeGroupName,
    TResult Function(_DLSNotificationChatChangeGroupAvatar value)?
        chatChangeGroupAvatar,
    required TResult orElse(),
  }) {
    if (chatChangeGroupAvatar != null) {
      return chatChangeGroupAvatar(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$_DLSNotificationChatChangeGroupAvatarToJson(
      this,
    );
  }
}

abstract class _DLSNotificationChatChangeGroupAvatar extends DLSNotification {
  const factory _DLSNotificationChatChangeGroupAvatar(
          {required final DLSNotificationChat nObject,
          required final DLSNotificationUser user,
          required final String avatarPrev,
          required final String avatarCur,
          @JsonKey(name: 'platform_type')
              final DlsPlatformNotificationType? platform}) =
      _$_DLSNotificationChatChangeGroupAvatar;
  const _DLSNotificationChatChangeGroupAvatar._() : super._();

  factory _DLSNotificationChatChangeGroupAvatar.fromJson(
          Map<String, dynamic> json) =
      _$_DLSNotificationChatChangeGroupAvatar.fromJson;

  @override
  DLSNotificationChat get nObject;
  DLSNotificationUser get user;
  String get avatarPrev;
  String get avatarCur;
  @override
  @JsonKey(name: 'platform_type')
  DlsPlatformNotificationType? get platform;
  @override
  @JsonKey(ignore: true)
  _$$_DLSNotificationChatChangeGroupAvatarCopyWith<
          _$_DLSNotificationChatChangeGroupAvatar>
      get copyWith => throw _privateConstructorUsedError;
}
